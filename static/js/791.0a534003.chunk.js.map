{"version":3,"file":"static/js/791.0a534003.chunk.js","mappings":"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","sources":["../node_modules/reactstrap/esm/Card.js","../node_modules/reactstrap/esm/CardBody.js","../node_modules/reactstrap/esm/CardImg.js","../node_modules/reactstrap/esm/CardTitle.js","../node_modules/reactstrap/esm/Col.js","../node_modules/reactstrap/esm/Container.js","../node_modules/reactstrap/esm/Row.js","../node_modules/use-sync-external-store/cjs/use-sync-external-store-shim.production.min.js","../node_modules/use-sync-external-store/shim/index.js","../node_modules/@tanstack/query-core/src/queryObserver.ts","../node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../node_modules/@tanstack/react-query/src/QueryErrorResetBoundary.tsx","../node_modules/@tanstack/react-query/src/errorBoundaryUtils.ts","../node_modules/@tanstack/react-query/src/utils.ts","../node_modules/@tanstack/react-query/src/isRestoring.tsx","../node_modules/@tanstack/react-query/src/suspense.ts","../node_modules/@tanstack/query-core/src/queriesObserver.ts","../node_modules/@tanstack/react-query/src/useQueries.ts","../node_modules/@tanstack/react-query/src/useQuery.ts","../node_modules/@tanstack/react-query/src/useBaseQuery.ts","../node_modules/@tanstack/react-query/src/useSyncExternalStore.ts"],"sourcesContent":["var _excluded = [\"className\", \"cssModule\", \"color\", \"body\", \"inverse\", \"outline\", \"tag\", \"innerRef\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  /** Toggles card padding using `.card-body` */\n  body: PropTypes.bool,\n  /** Add custom class */\n  className: PropTypes.string,\n  /** Change background color of component */\n  color: PropTypes.string,\n  /** Change underlying component's CSS base class name */\n  cssModule: PropTypes.object,\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.string, PropTypes.func]),\n  /** Inverts the color */\n  inverse: PropTypes.bool,\n  /** Changes the card to have only outline */\n  outline: PropTypes.bool,\n  /** Set a custom element for this component */\n  tag: tagPropType\n};\nfunction Card(props) {\n  var className = props.className,\n    cssModule = props.cssModule,\n    color = props.color,\n    body = props.body,\n    inverse = props.inverse,\n    outline = props.outline,\n    _props$tag = props.tag,\n    Tag = _props$tag === void 0 ? 'div' : _props$tag,\n    innerRef = props.innerRef,\n    attributes = _objectWithoutProperties(props, _excluded);\n  var classes = mapToCssModules(classNames(className, 'card', inverse ? 'text-white' : false, body ? 'card-body' : false, color ? \"\".concat(outline ? 'border' : 'bg', \"-\").concat(color) : false), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes,\n    ref: innerRef\n  }));\n}\nCard.propTypes = propTypes;\nexport default Card;","var _excluded = [\"className\", \"cssModule\", \"innerRef\", \"tag\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  /** Add custom class */\n  className: PropTypes.string,\n  /** Change underlying component's CSS base class name */\n  cssModule: PropTypes.object,\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.string, PropTypes.func]),\n  /** Set a custom element for this component */\n  tag: tagPropType\n};\nfunction CardBody(props) {\n  var className = props.className,\n    cssModule = props.cssModule,\n    innerRef = props.innerRef,\n    _props$tag = props.tag,\n    Tag = _props$tag === void 0 ? 'div' : _props$tag,\n    attributes = _objectWithoutProperties(props, _excluded);\n  var classes = mapToCssModules(classNames(className, 'card-body'), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes,\n    ref: innerRef\n  }));\n}\nCardBody.propTypes = propTypes;\nexport default CardBody;","var _excluded = [\"className\", \"cssModule\", \"top\", \"bottom\", \"tag\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  /** Add `bottom` prop if image is at bottom of card */\n  bottom: PropTypes.bool,\n  /** Add custom class */\n  className: PropTypes.string,\n  /** Change existing className with a new className */\n  cssModule: PropTypes.object,\n  /** Set a custom element for this component */\n  tag: tagPropType,\n  /** Add `top` prop if image is at top of card */\n  top: PropTypes.bool\n};\nfunction CardImg(props) {\n  var className = props.className,\n    cssModule = props.cssModule,\n    top = props.top,\n    bottom = props.bottom,\n    _props$tag = props.tag,\n    Tag = _props$tag === void 0 ? 'img' : _props$tag,\n    attributes = _objectWithoutProperties(props, _excluded);\n  var cardImgClassName = 'card-img';\n  if (top) {\n    cardImgClassName = 'card-img-top';\n  }\n  if (bottom) {\n    cardImgClassName = 'card-img-bottom';\n  }\n  var classes = mapToCssModules(classNames(className, cardImgClassName), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n}\nCardImg.propTypes = propTypes;\nexport default CardImg;","var _excluded = [\"className\", \"cssModule\", \"tag\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  /** Add custom class */\n  className: PropTypes.string,\n  /** Change underlying component's CSS base class name */\n  cssModule: PropTypes.object,\n  /** Set a custom element for this component */\n  tag: tagPropType\n};\nfunction CardTitle(props) {\n  var className = props.className,\n    cssModule = props.cssModule,\n    _props$tag = props.tag,\n    Tag = _props$tag === void 0 ? 'div' : _props$tag,\n    attributes = _objectWithoutProperties(props, _excluded);\n  var classes = mapToCssModules(classNames(className, 'card-title'), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n}\nCardTitle.propTypes = propTypes;\nexport default CardTitle;","var _excluded = [\"className\", \"cssModule\", \"widths\", \"tag\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType, isObject } from './utils';\nvar colWidths = ['xs', 'sm', 'md', 'lg', 'xl', 'xxl'];\nvar stringOrNumberProp = PropTypes.oneOfType([PropTypes.number, PropTypes.string]);\nvar columnProps = PropTypes.oneOfType([PropTypes.bool, PropTypes.number, PropTypes.string, PropTypes.shape({\n  size: PropTypes.oneOfType([PropTypes.bool, PropTypes.number, PropTypes.string]),\n  order: stringOrNumberProp,\n  offset: stringOrNumberProp\n})]);\nvar propTypes = {\n  tag: tagPropType,\n  xs: columnProps,\n  sm: columnProps,\n  md: columnProps,\n  lg: columnProps,\n  xl: columnProps,\n  xxl: columnProps,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  widths: PropTypes.array\n};\nvar getColumnSizeClass = function getColumnSizeClass(isXs, colWidth, colSize) {\n  if (colSize === true || colSize === '') {\n    return isXs ? 'col' : \"col-\".concat(colWidth);\n  }\n  if (colSize === 'auto') {\n    return isXs ? 'col-auto' : \"col-\".concat(colWidth, \"-auto\");\n  }\n  return isXs ? \"col-\".concat(colSize) : \"col-\".concat(colWidth, \"-\").concat(colSize);\n};\nexport var getColumnClasses = function getColumnClasses(attributes, cssModule) {\n  var widths = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : colWidths;\n  var modifiedAttributes = attributes;\n  var colClasses = [];\n  widths.forEach(function (colWidth, i) {\n    var columnProp = modifiedAttributes[colWidth];\n    delete modifiedAttributes[colWidth];\n    if (!columnProp && columnProp !== '') {\n      return;\n    }\n    var isXs = !i;\n    if (isObject(columnProp)) {\n      var _classNames;\n      var colSizeInterfix = isXs ? '-' : \"-\".concat(colWidth, \"-\");\n      var colClass = getColumnSizeClass(isXs, colWidth, columnProp.size);\n      colClasses.push(mapToCssModules(classNames((_classNames = {}, _defineProperty(_classNames, colClass, columnProp.size || columnProp.size === ''), _defineProperty(_classNames, \"order\".concat(colSizeInterfix).concat(columnProp.order), columnProp.order || columnProp.order === 0), _defineProperty(_classNames, \"offset\".concat(colSizeInterfix).concat(columnProp.offset), columnProp.offset || columnProp.offset === 0), _classNames)), cssModule));\n    } else {\n      var _colClass = getColumnSizeClass(isXs, colWidth, columnProp);\n      colClasses.push(_colClass);\n    }\n  });\n  return {\n    colClasses: colClasses,\n    modifiedAttributes: modifiedAttributes\n  };\n};\nfunction Col(props) {\n  var className = props.className,\n    cssModule = props.cssModule,\n    _props$widths = props.widths,\n    widths = _props$widths === void 0 ? colWidths : _props$widths,\n    _props$tag = props.tag,\n    Tag = _props$tag === void 0 ? 'div' : _props$tag,\n    attributes = _objectWithoutProperties(props, _excluded);\n  var _getColumnClasses = getColumnClasses(attributes, cssModule, widths),\n    modifiedAttributes = _getColumnClasses.modifiedAttributes,\n    colClasses = _getColumnClasses.colClasses;\n  if (!colClasses.length) {\n    colClasses.push('col');\n  }\n  var classes = mapToCssModules(classNames(className, colClasses), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, modifiedAttributes, {\n    className: classes\n  }));\n}\nCol.propTypes = propTypes;\nexport default Col;","var _excluded = [\"className\", \"cssModule\", \"fluid\", \"tag\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  fluid: PropTypes.oneOfType([PropTypes.bool, PropTypes.string]),\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nfunction Container(props) {\n  var className = props.className,\n    cssModule = props.cssModule,\n    fluid = props.fluid,\n    _props$tag = props.tag,\n    Tag = _props$tag === void 0 ? 'div' : _props$tag,\n    attributes = _objectWithoutProperties(props, _excluded);\n  var containerClass = 'container';\n  if (fluid === true) {\n    containerClass = 'container-fluid';\n  } else if (fluid) {\n    containerClass = \"container-\".concat(fluid);\n  }\n  var classes = mapToCssModules(classNames(className, containerClass), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n}\nContainer.propTypes = propTypes;\nexport default Container;","var _excluded = [\"className\", \"cssModule\", \"noGutters\", \"tag\", \"widths\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType, deprecated } from './utils';\nvar rowColWidths = ['xs', 'sm', 'md', 'lg', 'xl', 'xxl'];\nvar rowColsPropType = PropTypes.oneOfType([PropTypes.number, PropTypes.string]);\nvar propTypes = {\n  tag: tagPropType,\n  noGutters: deprecated(PropTypes.bool, 'Please use Bootstrap 5 gutter utility classes. https://getbootstrap.com/docs/5.0/layout/gutters/'),\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  xs: rowColsPropType,\n  sm: rowColsPropType,\n  md: rowColsPropType,\n  lg: rowColsPropType,\n  xl: rowColsPropType,\n  xxl: rowColsPropType,\n  widths: PropTypes.array\n};\nfunction Row(props) {\n  var className = props.className,\n    cssModule = props.cssModule,\n    noGutters = props.noGutters,\n    _props$tag = props.tag,\n    Tag = _props$tag === void 0 ? 'div' : _props$tag,\n    _props$widths = props.widths,\n    widths = _props$widths === void 0 ? rowColWidths : _props$widths,\n    attributes = _objectWithoutProperties(props, _excluded);\n  var colClasses = [];\n  widths.forEach(function (colWidth, i) {\n    var colSize = props[colWidth];\n    delete attributes[colWidth];\n    if (!colSize) {\n      return;\n    }\n    var isXs = !i;\n    colClasses.push(isXs ? \"row-cols-\".concat(colSize) : \"row-cols-\".concat(colWidth, \"-\").concat(colSize));\n  });\n  var classes = mapToCssModules(classNames(className, noGutters ? 'gx-0' : null, 'row', colClasses), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n}\nRow.propTypes = propTypes;\nexport default Row;","/**\n * @license React\n * use-sync-external-store-shim.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var e=require(\"react\");function h(a,b){return a===b&&(0!==a||1/a===1/b)||a!==a&&b!==b}var k=\"function\"===typeof Object.is?Object.is:h,l=e.useState,m=e.useEffect,n=e.useLayoutEffect,p=e.useDebugValue;function q(a,b){var d=b(),f=l({inst:{value:d,getSnapshot:b}}),c=f[0].inst,g=f[1];n(function(){c.value=d;c.getSnapshot=b;r(c)&&g({inst:c})},[a,d,b]);m(function(){r(c)&&g({inst:c});return a(function(){r(c)&&g({inst:c})})},[a]);p(d);return d}\nfunction r(a){var b=a.getSnapshot;a=a.value;try{var d=b();return!k(a,d)}catch(f){return!0}}function t(a,b){return b()}var u=\"undefined\"===typeof window||\"undefined\"===typeof window.document||\"undefined\"===typeof window.document.createElement?t:q;exports.useSyncExternalStore=void 0!==e.useSyncExternalStore?e.useSyncExternalStore:u;\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('../cjs/use-sync-external-store-shim.production.min.js');\n} else {\n  module.exports = require('../cjs/use-sync-external-store-shim.development.js');\n}\n","import {\n  isServer,\n  isValidTimeout,\n  noop,\n  replaceData,\n  shallowEqualObjects,\n  timeUntilStale,\n} from './utils'\nimport { notifyManager } from './notifyManager'\nimport { focusManager } from './focusManager'\nimport { Subscribable } from './subscribable'\nimport { canFetch, isCancelledError } from './retryer'\nimport type {\n  PlaceholderDataFunction,\n  QueryKey,\n  QueryObserverBaseResult,\n  QueryObserverOptions,\n  QueryObserverResult,\n  QueryOptions,\n  RefetchOptions,\n} from './types'\nimport type { Action, FetchOptions, Query, QueryState } from './query'\nimport type { QueryClient } from './queryClient'\nimport type { DefaultedQueryObserverOptions, RefetchPageFilters } from './types'\n\ntype QueryObserverListener<TData, TError> = (\n  result: QueryObserverResult<TData, TError>,\n) => void\n\nexport interface NotifyOptions {\n  cache?: boolean\n  listeners?: boolean\n  onError?: boolean\n  onSuccess?: boolean\n}\n\nexport interface ObserverFetchOptions extends FetchOptions {\n  throwOnError?: boolean\n}\n\nexport class QueryObserver<\n  TQueryFnData = unknown,\n  TError = unknown,\n  TData = TQueryFnData,\n  TQueryData = TQueryFnData,\n  TQueryKey extends QueryKey = QueryKey,\n> extends Subscribable<QueryObserverListener<TData, TError>> {\n  options: QueryObserverOptions<\n    TQueryFnData,\n    TError,\n    TData,\n    TQueryData,\n    TQueryKey\n  >\n\n  private client: QueryClient\n  private currentQuery!: Query<TQueryFnData, TError, TQueryData, TQueryKey>\n  private currentQueryInitialState!: QueryState<TQueryData, TError>\n  private currentResult!: QueryObserverResult<TData, TError>\n  private currentResultState?: QueryState<TQueryData, TError>\n  private currentResultOptions?: QueryObserverOptions<\n    TQueryFnData,\n    TError,\n    TData,\n    TQueryData,\n    TQueryKey\n  >\n  private previousQueryResult?: QueryObserverResult<TData, TError>\n  private selectError: TError | null\n  private selectFn?: (data: TQueryData) => TData\n  private selectResult?: TData\n  private staleTimeoutId?: ReturnType<typeof setTimeout>\n  private refetchIntervalId?: ReturnType<typeof setInterval>\n  private currentRefetchInterval?: number | false\n  private trackedProps!: Set<keyof QueryObserverResult>\n\n  constructor(\n    client: QueryClient,\n    options: QueryObserverOptions<\n      TQueryFnData,\n      TError,\n      TData,\n      TQueryData,\n      TQueryKey\n    >,\n  ) {\n    super()\n\n    this.client = client\n    this.options = options\n    this.trackedProps = new Set()\n    this.selectError = null\n    this.bindMethods()\n    this.setOptions(options)\n  }\n\n  protected bindMethods(): void {\n    this.remove = this.remove.bind(this)\n    this.refetch = this.refetch.bind(this)\n  }\n\n  protected onSubscribe(): void {\n    if (this.listeners.size === 1) {\n      this.currentQuery.addObserver(this)\n\n      if (shouldFetchOnMount(this.currentQuery, this.options)) {\n        this.executeFetch()\n      }\n\n      this.updateTimers()\n    }\n  }\n\n  protected onUnsubscribe(): void {\n    if (!this.hasListeners()) {\n      this.destroy()\n    }\n  }\n\n  shouldFetchOnReconnect(): boolean {\n    return shouldFetchOn(\n      this.currentQuery,\n      this.options,\n      this.options.refetchOnReconnect,\n    )\n  }\n\n  shouldFetchOnWindowFocus(): boolean {\n    return shouldFetchOn(\n      this.currentQuery,\n      this.options,\n      this.options.refetchOnWindowFocus,\n    )\n  }\n\n  destroy(): void {\n    this.listeners = new Set()\n    this.clearStaleTimeout()\n    this.clearRefetchInterval()\n    this.currentQuery.removeObserver(this)\n  }\n\n  setOptions(\n    options?: QueryObserverOptions<\n      TQueryFnData,\n      TError,\n      TData,\n      TQueryData,\n      TQueryKey\n    >,\n    notifyOptions?: NotifyOptions,\n  ): void {\n    const prevOptions = this.options\n    const prevQuery = this.currentQuery\n\n    this.options = this.client.defaultQueryOptions(options)\n\n    if (\n      process.env.NODE_ENV !== 'production' &&\n      typeof options?.isDataEqual !== 'undefined'\n    ) {\n      this.client\n        .getLogger()\n        .error(\n          `The isDataEqual option has been deprecated and will be removed in the next major version. You can achieve the same functionality by passing a function as the structuralSharing option`,\n        )\n    }\n\n    if (!shallowEqualObjects(prevOptions, this.options)) {\n      this.client.getQueryCache().notify({\n        type: 'observerOptionsUpdated',\n        query: this.currentQuery,\n        observer: this,\n      })\n    }\n\n    if (\n      typeof this.options.enabled !== 'undefined' &&\n      typeof this.options.enabled !== 'boolean'\n    ) {\n      throw new Error('Expected enabled to be a boolean')\n    }\n\n    // Keep previous query key if the user does not supply one\n    if (!this.options.queryKey) {\n      this.options.queryKey = prevOptions.queryKey\n    }\n\n    this.updateQuery()\n\n    const mounted = this.hasListeners()\n\n    // Fetch if there are subscribers\n    if (\n      mounted &&\n      shouldFetchOptionally(\n        this.currentQuery,\n        prevQuery,\n        this.options,\n        prevOptions,\n      )\n    ) {\n      this.executeFetch()\n    }\n\n    // Update result\n    this.updateResult(notifyOptions)\n\n    // Update stale interval if needed\n    if (\n      mounted &&\n      (this.currentQuery !== prevQuery ||\n        this.options.enabled !== prevOptions.enabled ||\n        this.options.staleTime !== prevOptions.staleTime)\n    ) {\n      this.updateStaleTimeout()\n    }\n\n    const nextRefetchInterval = this.computeRefetchInterval()\n\n    // Update refetch interval if needed\n    if (\n      mounted &&\n      (this.currentQuery !== prevQuery ||\n        this.options.enabled !== prevOptions.enabled ||\n        nextRefetchInterval !== this.currentRefetchInterval)\n    ) {\n      this.updateRefetchInterval(nextRefetchInterval)\n    }\n  }\n\n  getOptimisticResult(\n    options: DefaultedQueryObserverOptions<\n      TQueryFnData,\n      TError,\n      TData,\n      TQueryData,\n      TQueryKey\n    >,\n  ): QueryObserverResult<TData, TError> {\n    const query = this.client.getQueryCache().build(this.client, options)\n\n    const result = this.createResult(query, options)\n\n    if (shouldAssignObserverCurrentProperties(this, result, options)) {\n      // this assigns the optimistic result to the current Observer\n      // because if the query function changes, useQuery will be performing\n      // an effect where it would fetch again.\n      // When the fetch finishes, we perform a deep data cloning in order\n      // to reuse objects references. This deep data clone is performed against\n      // the `observer.currentResult.data` property\n      // When QueryKey changes, we refresh the query and get new `optimistic`\n      // result, while we leave the `observer.currentResult`, so when new data\n      // arrives, it finds the old `observer.currentResult` which is related\n      // to the old QueryKey. Which means that currentResult and selectData are\n      // out of sync already.\n      // To solve this, we move the cursor of the currentResult everytime\n      // an observer reads an optimistic value.\n\n      // When keeping the previous data, the result doesn't change until new\n      // data arrives.\n      this.currentResult = result\n      this.currentResultOptions = this.options\n      this.currentResultState = this.currentQuery.state\n    }\n    return result\n  }\n\n  getCurrentResult(): QueryObserverResult<TData, TError> {\n    return this.currentResult\n  }\n\n  trackResult(\n    result: QueryObserverResult<TData, TError>,\n  ): QueryObserverResult<TData, TError> {\n    const trackedResult = {} as QueryObserverResult<TData, TError>\n\n    Object.keys(result).forEach((key) => {\n      Object.defineProperty(trackedResult, key, {\n        configurable: false,\n        enumerable: true,\n        get: () => {\n          this.trackedProps.add(key as keyof QueryObserverResult)\n          return result[key as keyof QueryObserverResult]\n        },\n      })\n    })\n\n    return trackedResult\n  }\n\n  getCurrentQuery(): Query<TQueryFnData, TError, TQueryData, TQueryKey> {\n    return this.currentQuery\n  }\n\n  remove(): void {\n    this.client.getQueryCache().remove(this.currentQuery)\n  }\n\n  refetch<TPageData>({\n    refetchPage,\n    ...options\n  }: RefetchOptions & RefetchPageFilters<TPageData> = {}): Promise<\n    QueryObserverResult<TData, TError>\n  > {\n    return this.fetch({\n      ...options,\n      meta: { refetchPage },\n    })\n  }\n\n  fetchOptimistic(\n    options: QueryObserverOptions<\n      TQueryFnData,\n      TError,\n      TData,\n      TQueryData,\n      TQueryKey\n    >,\n  ): Promise<QueryObserverResult<TData, TError>> {\n    const defaultedOptions = this.client.defaultQueryOptions(options)\n\n    const query = this.client\n      .getQueryCache()\n      .build(this.client, defaultedOptions)\n    query.isFetchingOptimistic = true\n\n    return query.fetch().then(() => this.createResult(query, defaultedOptions))\n  }\n\n  protected fetch(\n    fetchOptions: ObserverFetchOptions,\n  ): Promise<QueryObserverResult<TData, TError>> {\n    return this.executeFetch({\n      ...fetchOptions,\n      cancelRefetch: fetchOptions.cancelRefetch ?? true,\n    }).then(() => {\n      this.updateResult()\n      return this.currentResult\n    })\n  }\n\n  private executeFetch(\n    fetchOptions?: ObserverFetchOptions,\n  ): Promise<TQueryData | undefined> {\n    // Make sure we reference the latest query as the current one might have been removed\n    this.updateQuery()\n\n    // Fetch\n    let promise: Promise<TQueryData | undefined> = this.currentQuery.fetch(\n      this.options as QueryOptions<TQueryFnData, TError, TQueryData, TQueryKey>,\n      fetchOptions,\n    )\n\n    if (!fetchOptions?.throwOnError) {\n      promise = promise.catch(noop)\n    }\n\n    return promise\n  }\n\n  private updateStaleTimeout(): void {\n    this.clearStaleTimeout()\n\n    if (\n      isServer ||\n      this.currentResult.isStale ||\n      !isValidTimeout(this.options.staleTime)\n    ) {\n      return\n    }\n\n    const time = timeUntilStale(\n      this.currentResult.dataUpdatedAt,\n      this.options.staleTime,\n    )\n\n    // The timeout is sometimes triggered 1 ms before the stale time expiration.\n    // To mitigate this issue we always add 1 ms to the timeout.\n    const timeout = time + 1\n\n    this.staleTimeoutId = setTimeout(() => {\n      if (!this.currentResult.isStale) {\n        this.updateResult()\n      }\n    }, timeout)\n  }\n\n  private computeRefetchInterval() {\n    return typeof this.options.refetchInterval === 'function'\n      ? this.options.refetchInterval(this.currentResult.data, this.currentQuery)\n      : this.options.refetchInterval ?? false\n  }\n\n  private updateRefetchInterval(nextInterval: number | false): void {\n    this.clearRefetchInterval()\n\n    this.currentRefetchInterval = nextInterval\n\n    if (\n      isServer ||\n      this.options.enabled === false ||\n      !isValidTimeout(this.currentRefetchInterval) ||\n      this.currentRefetchInterval === 0\n    ) {\n      return\n    }\n\n    this.refetchIntervalId = setInterval(() => {\n      if (\n        this.options.refetchIntervalInBackground ||\n        focusManager.isFocused()\n      ) {\n        this.executeFetch()\n      }\n    }, this.currentRefetchInterval)\n  }\n\n  private updateTimers(): void {\n    this.updateStaleTimeout()\n    this.updateRefetchInterval(this.computeRefetchInterval())\n  }\n\n  private clearStaleTimeout(): void {\n    if (this.staleTimeoutId) {\n      clearTimeout(this.staleTimeoutId)\n      this.staleTimeoutId = undefined\n    }\n  }\n\n  private clearRefetchInterval(): void {\n    if (this.refetchIntervalId) {\n      clearInterval(this.refetchIntervalId)\n      this.refetchIntervalId = undefined\n    }\n  }\n\n  protected createResult(\n    query: Query<TQueryFnData, TError, TQueryData, TQueryKey>,\n    options: QueryObserverOptions<\n      TQueryFnData,\n      TError,\n      TData,\n      TQueryData,\n      TQueryKey\n    >,\n  ): QueryObserverResult<TData, TError> {\n    const prevQuery = this.currentQuery\n    const prevOptions = this.options\n    const prevResult = this.currentResult as\n      | QueryObserverResult<TData, TError>\n      | undefined\n    const prevResultState = this.currentResultState\n    const prevResultOptions = this.currentResultOptions\n    const queryChange = query !== prevQuery\n    const queryInitialState = queryChange\n      ? query.state\n      : this.currentQueryInitialState\n    const prevQueryResult = queryChange\n      ? this.currentResult\n      : this.previousQueryResult\n\n    const { state } = query\n    let { dataUpdatedAt, error, errorUpdatedAt, fetchStatus, status } = state\n    let isPreviousData = false\n    let isPlaceholderData = false\n    let data: TData | undefined\n\n    // Optimistically set result in fetching state if needed\n    if (options._optimisticResults) {\n      const mounted = this.hasListeners()\n\n      const fetchOnMount = !mounted && shouldFetchOnMount(query, options)\n\n      const fetchOptionally =\n        mounted && shouldFetchOptionally(query, prevQuery, options, prevOptions)\n\n      if (fetchOnMount || fetchOptionally) {\n        fetchStatus = canFetch(query.options.networkMode)\n          ? 'fetching'\n          : 'paused'\n        if (!dataUpdatedAt) {\n          status = 'loading'\n        }\n      }\n      if (options._optimisticResults === 'isRestoring') {\n        fetchStatus = 'idle'\n      }\n    }\n\n    // Keep previous data if needed\n    if (\n      options.keepPreviousData &&\n      !state.dataUpdatedAt &&\n      prevQueryResult?.isSuccess &&\n      status !== 'error'\n    ) {\n      data = prevQueryResult.data\n      dataUpdatedAt = prevQueryResult.dataUpdatedAt\n      status = prevQueryResult.status\n      isPreviousData = true\n    }\n    // Select data if needed\n    else if (options.select && typeof state.data !== 'undefined') {\n      // Memoize select result\n      if (\n        prevResult &&\n        state.data === prevResultState?.data &&\n        options.select === this.selectFn\n      ) {\n        data = this.selectResult\n      } else {\n        try {\n          this.selectFn = options.select\n          data = options.select(state.data)\n          data = replaceData(prevResult?.data, data, options)\n          this.selectResult = data\n          this.selectError = null\n        } catch (selectError) {\n          if (process.env.NODE_ENV !== 'production') {\n            this.client.getLogger().error(selectError)\n          }\n          this.selectError = selectError as TError\n        }\n      }\n    }\n    // Use query data\n    else {\n      data = state.data as unknown as TData\n    }\n\n    // Show placeholder data if needed\n    if (\n      typeof options.placeholderData !== 'undefined' &&\n      typeof data === 'undefined' &&\n      status === 'loading'\n    ) {\n      let placeholderData\n\n      // Memoize placeholder data\n      if (\n        prevResult?.isPlaceholderData &&\n        options.placeholderData === prevResultOptions?.placeholderData\n      ) {\n        placeholderData = prevResult.data\n      } else {\n        placeholderData =\n          typeof options.placeholderData === 'function'\n            ? (options.placeholderData as PlaceholderDataFunction<TQueryData>)()\n            : options.placeholderData\n        if (options.select && typeof placeholderData !== 'undefined') {\n          try {\n            placeholderData = options.select(placeholderData)\n            this.selectError = null\n          } catch (selectError) {\n            if (process.env.NODE_ENV !== 'production') {\n              this.client.getLogger().error(selectError)\n            }\n            this.selectError = selectError as TError\n          }\n        }\n      }\n\n      if (typeof placeholderData !== 'undefined') {\n        status = 'success'\n        data = replaceData(prevResult?.data, placeholderData, options) as TData\n        isPlaceholderData = true\n      }\n    }\n\n    if (this.selectError) {\n      error = this.selectError as any\n      data = this.selectResult\n      errorUpdatedAt = Date.now()\n      status = 'error'\n    }\n\n    const isFetching = fetchStatus === 'fetching'\n    const isLoading = status === 'loading'\n    const isError = status === 'error'\n\n    const result: QueryObserverBaseResult<TData, TError> = {\n      status,\n      fetchStatus,\n      isLoading,\n      isSuccess: status === 'success',\n      isError,\n      isInitialLoading: isLoading && isFetching,\n      data,\n      dataUpdatedAt,\n      error,\n      errorUpdatedAt,\n      failureCount: state.fetchFailureCount,\n      failureReason: state.fetchFailureReason,\n      errorUpdateCount: state.errorUpdateCount,\n      isFetched: state.dataUpdateCount > 0 || state.errorUpdateCount > 0,\n      isFetchedAfterMount:\n        state.dataUpdateCount > queryInitialState.dataUpdateCount ||\n        state.errorUpdateCount > queryInitialState.errorUpdateCount,\n      isFetching,\n      isRefetching: isFetching && !isLoading,\n      isLoadingError: isError && state.dataUpdatedAt === 0,\n      isPaused: fetchStatus === 'paused',\n      isPlaceholderData,\n      isPreviousData,\n      isRefetchError: isError && state.dataUpdatedAt !== 0,\n      isStale: isStale(query, options),\n      refetch: this.refetch,\n      remove: this.remove,\n    }\n\n    return result as QueryObserverResult<TData, TError>\n  }\n\n  updateResult(notifyOptions?: NotifyOptions): void {\n    const prevResult = this.currentResult as\n      | QueryObserverResult<TData, TError>\n      | undefined\n\n    const nextResult = this.createResult(this.currentQuery, this.options)\n    this.currentResultState = this.currentQuery.state\n    this.currentResultOptions = this.options\n\n    // Only notify and update result if something has changed\n    if (shallowEqualObjects(nextResult, prevResult)) {\n      return\n    }\n\n    this.currentResult = nextResult\n\n    // Determine which callbacks to trigger\n    const defaultNotifyOptions: NotifyOptions = { cache: true }\n\n    const shouldNotifyListeners = (): boolean => {\n      if (!prevResult) {\n        return true\n      }\n\n      const { notifyOnChangeProps } = this.options\n      const notifyOnChangePropsValue =\n        typeof notifyOnChangeProps === 'function'\n          ? notifyOnChangeProps()\n          : notifyOnChangeProps\n\n      if (\n        notifyOnChangePropsValue === 'all' ||\n        (!notifyOnChangePropsValue && !this.trackedProps.size)\n      ) {\n        return true\n      }\n\n      const includedProps = new Set(\n        notifyOnChangePropsValue ?? this.trackedProps,\n      )\n\n      if (this.options.useErrorBoundary) {\n        includedProps.add('error')\n      }\n\n      return Object.keys(this.currentResult).some((key) => {\n        const typedKey = key as keyof QueryObserverResult\n        const changed = this.currentResult[typedKey] !== prevResult[typedKey]\n        return changed && includedProps.has(typedKey)\n      })\n    }\n\n    if (notifyOptions?.listeners !== false && shouldNotifyListeners()) {\n      defaultNotifyOptions.listeners = true\n    }\n\n    this.notify({ ...defaultNotifyOptions, ...notifyOptions })\n  }\n\n  private updateQuery(): void {\n    const query = this.client.getQueryCache().build(this.client, this.options)\n\n    if (query === this.currentQuery) {\n      return\n    }\n\n    const prevQuery = this.currentQuery as\n      | Query<TQueryFnData, TError, TQueryData, TQueryKey>\n      | undefined\n    this.currentQuery = query\n    this.currentQueryInitialState = query.state\n    this.previousQueryResult = this.currentResult\n\n    if (this.hasListeners()) {\n      prevQuery?.removeObserver(this)\n      query.addObserver(this)\n    }\n  }\n\n  onQueryUpdate(action: Action<TData, TError>): void {\n    const notifyOptions: NotifyOptions = {}\n\n    if (action.type === 'success') {\n      notifyOptions.onSuccess = !action.manual\n    } else if (action.type === 'error' && !isCancelledError(action.error)) {\n      notifyOptions.onError = true\n    }\n\n    this.updateResult(notifyOptions)\n\n    if (this.hasListeners()) {\n      this.updateTimers()\n    }\n  }\n\n  private notify(notifyOptions: NotifyOptions): void {\n    notifyManager.batch(() => {\n      // First trigger the configuration callbacks\n      if (notifyOptions.onSuccess) {\n        this.options.onSuccess?.(this.currentResult.data!)\n        this.options.onSettled?.(this.currentResult.data!, null)\n      } else if (notifyOptions.onError) {\n        this.options.onError?.(this.currentResult.error!)\n        this.options.onSettled?.(undefined, this.currentResult.error!)\n      }\n\n      // Then trigger the listeners\n      if (notifyOptions.listeners) {\n        this.listeners.forEach(({ listener }) => {\n          listener(this.currentResult)\n        })\n      }\n\n      // Then the cache listeners\n      if (notifyOptions.cache) {\n        this.client.getQueryCache().notify({\n          query: this.currentQuery,\n          type: 'observerResultsUpdated',\n        })\n      }\n    })\n  }\n}\n\nfunction shouldLoadOnMount(\n  query: Query<any, any, any, any>,\n  options: QueryObserverOptions<any, any, any, any>,\n): boolean {\n  return (\n    options.enabled !== false &&\n    !query.state.dataUpdatedAt &&\n    !(query.state.status === 'error' && options.retryOnMount === false)\n  )\n}\n\nfunction shouldFetchOnMount(\n  query: Query<any, any, any, any>,\n  options: QueryObserverOptions<any, any, any, any, any>,\n): boolean {\n  return (\n    shouldLoadOnMount(query, options) ||\n    (query.state.dataUpdatedAt > 0 &&\n      shouldFetchOn(query, options, options.refetchOnMount))\n  )\n}\n\nfunction shouldFetchOn(\n  query: Query<any, any, any, any>,\n  options: QueryObserverOptions<any, any, any, any, any>,\n  field: typeof options['refetchOnMount'] &\n    typeof options['refetchOnWindowFocus'] &\n    typeof options['refetchOnReconnect'],\n) {\n  if (options.enabled !== false) {\n    const value = typeof field === 'function' ? field(query) : field\n\n    return value === 'always' || (value !== false && isStale(query, options))\n  }\n  return false\n}\n\nfunction shouldFetchOptionally(\n  query: Query<any, any, any, any>,\n  prevQuery: Query<any, any, any, any>,\n  options: QueryObserverOptions<any, any, any, any, any>,\n  prevOptions: QueryObserverOptions<any, any, any, any, any>,\n): boolean {\n  return (\n    options.enabled !== false &&\n    (query !== prevQuery || prevOptions.enabled === false) &&\n    (!options.suspense || query.state.status !== 'error') &&\n    isStale(query, options)\n  )\n}\n\nfunction isStale(\n  query: Query<any, any, any, any>,\n  options: QueryObserverOptions<any, any, any, any, any>,\n): boolean {\n  return query.isStaleByTime(options.staleTime)\n}\n\n// this function would decide if we will update the observer's 'current'\n// properties after an optimistic reading via getOptimisticResult\nfunction shouldAssignObserverCurrentProperties<\n  TQueryFnData = unknown,\n  TError = unknown,\n  TData = TQueryFnData,\n  TQueryData = TQueryFnData,\n  TQueryKey extends QueryKey = QueryKey,\n>(\n  observer: QueryObserver<TQueryFnData, TError, TData, TQueryData, TQueryKey>,\n  optimisticResult: QueryObserverResult<TData, TError>,\n  options: DefaultedQueryObserverOptions<\n    TQueryFnData,\n    TError,\n    TData,\n    TQueryData,\n    TQueryKey\n  >,\n) {\n  // it is important to keep this condition like this for three reasons:\n  // 1. It will get removed in the v5\n  // 2. it reads: don't update the properties if we want to keep the previous\n  // data.\n  // 3. The opposite condition (!options.keepPreviousData) would fallthrough\n  // and will result in a bad decision\n  if (options.keepPreviousData) {\n    return false\n  }\n\n  // this means we want to put some placeholder data when pending and queryKey\n  // changed.\n  if (options.placeholderData !== undefined) {\n    // re-assign properties only if current data is placeholder data\n    // which means that data did not arrive yet, so, if there is some cached data\n    // we need to \"prepare\" to receive it\n    return optimisticResult.isPlaceholderData\n  }\n\n  // if the newly created result isn't what the observer is holding as current,\n  // then we'll need to update the properties as well\n  if (observer.getCurrentResult() !== optimisticResult) {\n    return true\n  }\n\n  // basically, just keep previous properties if nothing changed\n  return false\n}\n","import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose.js\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n  return target;\n}","'use client'\nimport * as React from 'react'\n\n// CONTEXT\n\nexport interface QueryErrorResetBoundaryValue {\n  clearReset: () => void\n  isReset: () => boolean\n  reset: () => void\n}\n\nfunction createValue(): QueryErrorResetBoundaryValue {\n  let isReset = false\n  return {\n    clearReset: () => {\n      isReset = false\n    },\n    reset: () => {\n      isReset = true\n    },\n    isReset: () => {\n      return isReset\n    },\n  }\n}\n\nconst QueryErrorResetBoundaryContext = React.createContext(createValue())\n\n// HOOK\n\nexport const useQueryErrorResetBoundary = () =>\n  React.useContext(QueryErrorResetBoundaryContext)\n\n// COMPONENT\n\nexport interface QueryErrorResetBoundaryProps {\n  children:\n    | ((value: QueryErrorResetBoundaryValue) => React.ReactNode)\n    | React.ReactNode\n}\n\nexport const QueryErrorResetBoundary = ({\n  children,\n}: QueryErrorResetBoundaryProps) => {\n  const [value] = React.useState(() => createValue())\n  return (\n    <QueryErrorResetBoundaryContext.Provider value={value}>\n      {typeof children === 'function'\n        ? (children as Function)(value)\n        : children}\n    </QueryErrorResetBoundaryContext.Provider>\n  )\n}\n","'use client'\nimport * as React from 'react'\nimport { shouldThrowError } from './utils'\nimport type {\n  DefaultedQueryObserverOptions,\n  Query,\n  QueryKey,\n  QueryObserverResult,\n  UseErrorBoundary,\n} from '@tanstack/query-core'\nimport type { QueryErrorResetBoundaryValue } from './QueryErrorResetBoundary'\n\nexport const ensurePreventErrorBoundaryRetry = <\n  TQueryFnData,\n  TError,\n  TData,\n  TQueryData,\n  TQueryKey extends QueryKey,\n>(\n  options: DefaultedQueryObserverOptions<\n    TQueryFnData,\n    TError,\n    TData,\n    TQueryData,\n    TQueryKey\n  >,\n  errorResetBoundary: QueryErrorResetBoundaryValue,\n) => {\n  if (options.suspense || options.useErrorBoundary) {\n    // Prevent retrying failed query if the error boundary has not been reset yet\n    if (!errorResetBoundary.isReset()) {\n      options.retryOnMount = false\n    }\n  }\n}\n\nexport const useClearResetErrorBoundary = (\n  errorResetBoundary: QueryErrorResetBoundaryValue,\n) => {\n  React.useEffect(() => {\n    errorResetBoundary.clearReset()\n  }, [errorResetBoundary])\n}\n\nexport const getHasError = <\n  TData,\n  TError,\n  TQueryFnData,\n  TQueryData,\n  TQueryKey extends QueryKey,\n>({\n  result,\n  errorResetBoundary,\n  useErrorBoundary,\n  query,\n}: {\n  result: QueryObserverResult<TData, TError>\n  errorResetBoundary: QueryErrorResetBoundaryValue\n  useErrorBoundary: UseErrorBoundary<\n    TQueryFnData,\n    TError,\n    TQueryData,\n    TQueryKey\n  >\n  query: Query<TQueryFnData, TError, TQueryData, TQueryKey>\n}) => {\n  return (\n    result.isError &&\n    !errorResetBoundary.isReset() &&\n    !result.isFetching &&\n    shouldThrowError(useErrorBoundary, [result.error, query])\n  )\n}\n","export function shouldThrowError<T extends (...args: any[]) => boolean>(\n  _useErrorBoundary: boolean | T | undefined,\n  params: Parameters<T>,\n): boolean {\n  // Allow useErrorBoundary function to override throwing behavior on a per-error basis\n  if (typeof _useErrorBoundary === 'function') {\n    return _useErrorBoundary(...params)\n  }\n\n  return !!_useErrorBoundary\n}\n","'use client'\nimport * as React from 'react'\n\nconst IsRestoringContext = React.createContext(false)\n\nexport const useIsRestoring = () => React.useContext(IsRestoringContext)\nexport const IsRestoringProvider = IsRestoringContext.Provider\n","import type { DefaultedQueryObserverOptions } from '@tanstack/query-core'\nimport type { QueryObserver } from '@tanstack/query-core'\nimport type { QueryErrorResetBoundaryValue } from './QueryErrorResetBoundary'\nimport type { QueryObserverResult } from '@tanstack/query-core'\nimport type { QueryKey } from '@tanstack/query-core'\n\nexport const ensureStaleTime = (\n  defaultedOptions: DefaultedQueryObserverOptions<any, any, any, any, any>,\n) => {\n  if (defaultedOptions.suspense) {\n    // Always set stale time when using suspense to prevent\n    // fetching again when directly mounting after suspending\n    if (typeof defaultedOptions.staleTime !== 'number') {\n      defaultedOptions.staleTime = 1000\n    }\n  }\n}\n\nexport const willFetch = (\n  result: QueryObserverResult<any, any>,\n  isRestoring: boolean,\n) => result.isLoading && result.isFetching && !isRestoring\n\nexport const shouldSuspend = (\n  defaultedOptions:\n    | DefaultedQueryObserverOptions<any, any, any, any, any>\n    | undefined,\n  result: QueryObserverResult<any, any>,\n  isRestoring: boolean,\n) => defaultedOptions?.suspense && willFetch(result, isRestoring)\n\nexport const fetchOptimistic = <\n  TQueryFnData,\n  TError,\n  TData,\n  TQueryData,\n  TQueryKey extends QueryKey,\n>(\n  defaultedOptions: DefaultedQueryObserverOptions<\n    TQueryFnData,\n    TError,\n    TData,\n    TQueryData,\n    TQueryKey\n  >,\n  observer: QueryObserver<TQueryFnData, TError, TData, TQueryData, TQueryKey>,\n  errorResetBoundary: QueryErrorResetBoundaryValue,\n) =>\n  observer\n    .fetchOptimistic(defaultedOptions)\n    .then(({ data }) => {\n      defaultedOptions.onSuccess?.(data as TData)\n      defaultedOptions.onSettled?.(data, null)\n    })\n    .catch((error) => {\n      errorResetBoundary.clearReset()\n      defaultedOptions.onError?.(error)\n      defaultedOptions.onSettled?.(undefined, error)\n    })\n","import { difference, replaceAt } from './utils'\nimport { notifyManager } from './notifyManager'\nimport { QueryObserver } from './queryObserver'\nimport { Subscribable } from './subscribable'\nimport type {\n  DefaultedQueryObserverOptions,\n  QueryObserverOptions,\n  QueryObserverResult,\n} from './types'\nimport type { QueryClient } from './queryClient'\nimport type { NotifyOptions } from './queryObserver'\n\ntype QueriesObserverListener = (result: QueryObserverResult[]) => void\n\nexport class QueriesObserver extends Subscribable<QueriesObserverListener> {\n  private client: QueryClient\n  private result: QueryObserverResult[]\n  private queries: QueryObserverOptions[]\n  private observers: QueryObserver[]\n  private observersMap: Record<string, QueryObserver>\n\n  constructor(client: QueryClient, queries?: QueryObserverOptions[]) {\n    super()\n\n    this.client = client\n    this.queries = []\n    this.result = []\n    this.observers = []\n    this.observersMap = {}\n\n    if (queries) {\n      this.setQueries(queries)\n    }\n  }\n\n  protected onSubscribe(): void {\n    if (this.listeners.size === 1) {\n      this.observers.forEach((observer) => {\n        observer.subscribe((result) => {\n          this.onUpdate(observer, result)\n        })\n      })\n    }\n  }\n\n  protected onUnsubscribe(): void {\n    if (!this.listeners.size) {\n      this.destroy()\n    }\n  }\n\n  destroy(): void {\n    this.listeners = new Set()\n    this.observers.forEach((observer) => {\n      observer.destroy()\n    })\n  }\n\n  setQueries(\n    queries: QueryObserverOptions[],\n    notifyOptions?: NotifyOptions,\n  ): void {\n    this.queries = queries\n\n    notifyManager.batch(() => {\n      const prevObservers = this.observers\n\n      const newObserverMatches = this.findMatchingObservers(this.queries)\n\n      // set options for the new observers to notify of changes\n      newObserverMatches.forEach((match) =>\n        match.observer.setOptions(match.defaultedQueryOptions, notifyOptions),\n      )\n\n      const newObservers = newObserverMatches.map((match) => match.observer)\n      const newObserversMap = Object.fromEntries(\n        newObservers.map((observer) => [observer.options.queryHash, observer]),\n      )\n      const newResult = newObservers.map((observer) =>\n        observer.getCurrentResult(),\n      )\n\n      const hasIndexChange = newObservers.some(\n        (observer, index) => observer !== prevObservers[index],\n      )\n      if (prevObservers.length === newObservers.length && !hasIndexChange) {\n        return\n      }\n\n      this.observers = newObservers\n      this.observersMap = newObserversMap\n      this.result = newResult\n\n      if (!this.hasListeners()) {\n        return\n      }\n\n      difference(prevObservers, newObservers).forEach((observer) => {\n        observer.destroy()\n      })\n\n      difference(newObservers, prevObservers).forEach((observer) => {\n        observer.subscribe((result) => {\n          this.onUpdate(observer, result)\n        })\n      })\n\n      this.notify()\n    })\n  }\n\n  getCurrentResult(): QueryObserverResult[] {\n    return this.result\n  }\n\n  getQueries() {\n    return this.observers.map((observer) => observer.getCurrentQuery())\n  }\n\n  getObservers() {\n    return this.observers\n  }\n\n  getOptimisticResult(queries: QueryObserverOptions[]): QueryObserverResult[] {\n    return this.findMatchingObservers(queries).map((match) =>\n      match.observer.getOptimisticResult(match.defaultedQueryOptions),\n    )\n  }\n\n  private findMatchingObservers(\n    queries: QueryObserverOptions[],\n  ): QueryObserverMatch[] {\n    const prevObservers = this.observers\n    const prevObserversMap = new Map(\n      prevObservers.map((observer) => [observer.options.queryHash, observer]),\n    )\n\n    const defaultedQueryOptions = queries.map((options) =>\n      this.client.defaultQueryOptions(options),\n    )\n\n    const matchingObservers: QueryObserverMatch[] =\n      defaultedQueryOptions.flatMap((defaultedOptions) => {\n        const match = prevObserversMap.get(defaultedOptions.queryHash)\n        if (match != null) {\n          return [{ defaultedQueryOptions: defaultedOptions, observer: match }]\n        }\n        return []\n      })\n\n    const matchedQueryHashes = new Set(\n      matchingObservers.map((match) => match.defaultedQueryOptions.queryHash),\n    )\n    const unmatchedQueries = defaultedQueryOptions.filter(\n      (defaultedOptions) => !matchedQueryHashes.has(defaultedOptions.queryHash),\n    )\n\n    const matchingObserversSet = new Set(\n      matchingObservers.map((match) => match.observer),\n    )\n    const unmatchedObservers = prevObservers.filter(\n      (prevObserver) => !matchingObserversSet.has(prevObserver),\n    )\n\n    const getObserver = (options: QueryObserverOptions): QueryObserver => {\n      const defaultedOptions = this.client.defaultQueryOptions(options)\n      const currentObserver = this.observersMap[defaultedOptions.queryHash!]\n      return currentObserver ?? new QueryObserver(this.client, defaultedOptions)\n    }\n\n    const newOrReusedObservers: QueryObserverMatch[] = unmatchedQueries.map(\n      (options, index) => {\n        if (options.keepPreviousData) {\n          // return previous data from one of the observers that no longer match\n          const previouslyUsedObserver = unmatchedObservers[index]\n          if (previouslyUsedObserver !== undefined) {\n            return {\n              defaultedQueryOptions: options,\n              observer: previouslyUsedObserver,\n            }\n          }\n        }\n        return {\n          defaultedQueryOptions: options,\n          observer: getObserver(options),\n        }\n      },\n    )\n\n    const sortMatchesByOrderOfQueries = (\n      a: QueryObserverMatch,\n      b: QueryObserverMatch,\n    ): number =>\n      defaultedQueryOptions.indexOf(a.defaultedQueryOptions) -\n      defaultedQueryOptions.indexOf(b.defaultedQueryOptions)\n\n    return matchingObservers\n      .concat(newOrReusedObservers)\n      .sort(sortMatchesByOrderOfQueries)\n  }\n\n  private onUpdate(observer: QueryObserver, result: QueryObserverResult): void {\n    const index = this.observers.indexOf(observer)\n    if (index !== -1) {\n      this.result = replaceAt(this.result, index, result)\n      this.notify()\n    }\n  }\n\n  private notify(): void {\n    notifyManager.batch(() => {\n      this.listeners.forEach(({ listener }) => {\n        listener(this.result)\n      })\n    })\n  }\n}\n\ntype QueryObserverMatch = {\n  defaultedQueryOptions: DefaultedQueryObserverOptions\n  observer: QueryObserver\n}\n","'use client'\nimport * as React from 'react'\n\nimport { QueriesObserver, notifyManager } from '@tanstack/query-core'\nimport { useSyncExternalStore } from './useSyncExternalStore'\nimport { useQueryClient } from './QueryClientProvider'\nimport { useIsRestoring } from './isRestoring'\nimport { useQueryErrorResetBoundary } from './QueryErrorResetBoundary'\nimport {\n  ensurePreventErrorBoundaryRetry,\n  getHasError,\n  useClearResetErrorBoundary,\n} from './errorBoundaryUtils'\nimport {\n  ensureStaleTime,\n  fetchOptimistic,\n  shouldSuspend,\n  willFetch,\n} from './suspense'\nimport type { QueryFunction, QueryKey } from '@tanstack/query-core'\nimport type { UseQueryOptions, UseQueryResult } from './types'\n\n// This defines the `UseQueryOptions` that are accepted in `QueriesOptions` & `GetOptions`.\n// - `context` is omitted as it is passed as a root-level option to `useQueries` instead.\ntype UseQueryOptionsForUseQueries<\n  TQueryFnData = unknown,\n  TError = unknown,\n  TData = TQueryFnData,\n  TQueryKey extends QueryKey = QueryKey,\n> = Omit<UseQueryOptions<TQueryFnData, TError, TData, TQueryKey>, 'context'>\n\n// Avoid TS depth-limit error in case of large array literal\ntype MAXIMUM_DEPTH = 20\n\ntype GetOptions<T> =\n  // Part 1: responsible for applying explicit type parameter to function arguments, if object { queryFnData: TQueryFnData, error: TError, data: TData }\n  T extends {\n    queryFnData: infer TQueryFnData\n    error?: infer TError\n    data: infer TData\n  }\n    ? UseQueryOptionsForUseQueries<TQueryFnData, TError, TData>\n    : T extends { queryFnData: infer TQueryFnData; error?: infer TError }\n    ? UseQueryOptionsForUseQueries<TQueryFnData, TError>\n    : T extends { data: infer TData; error?: infer TError }\n    ? UseQueryOptionsForUseQueries<unknown, TError, TData>\n    : // Part 2: responsible for applying explicit type parameter to function arguments, if tuple [TQueryFnData, TError, TData]\n    T extends [infer TQueryFnData, infer TError, infer TData]\n    ? UseQueryOptionsForUseQueries<TQueryFnData, TError, TData>\n    : T extends [infer TQueryFnData, infer TError]\n    ? UseQueryOptionsForUseQueries<TQueryFnData, TError>\n    : T extends [infer TQueryFnData]\n    ? UseQueryOptionsForUseQueries<TQueryFnData>\n    : // Part 3: responsible for inferring and enforcing type if no explicit parameter was provided\n    T extends {\n        queryFn?: QueryFunction<infer TQueryFnData, infer TQueryKey>\n        select: (data: any) => infer TData\n      }\n    ? UseQueryOptionsForUseQueries<TQueryFnData, unknown, TData, TQueryKey>\n    : T extends { queryFn?: QueryFunction<infer TQueryFnData, infer TQueryKey> }\n    ? UseQueryOptionsForUseQueries<\n        TQueryFnData,\n        unknown,\n        TQueryFnData,\n        TQueryKey\n      >\n    : // Fallback\n      UseQueryOptionsForUseQueries\n\ntype GetResults<T> =\n  // Part 1: responsible for mapping explicit type parameter to function result, if object\n  T extends { queryFnData: any; error?: infer TError; data: infer TData }\n    ? UseQueryResult<TData, TError>\n    : T extends { queryFnData: infer TQueryFnData; error?: infer TError }\n    ? UseQueryResult<TQueryFnData, TError>\n    : T extends { data: infer TData; error?: infer TError }\n    ? UseQueryResult<TData, TError>\n    : // Part 2: responsible for mapping explicit type parameter to function result, if tuple\n    T extends [any, infer TError, infer TData]\n    ? UseQueryResult<TData, TError>\n    : T extends [infer TQueryFnData, infer TError]\n    ? UseQueryResult<TQueryFnData, TError>\n    : T extends [infer TQueryFnData]\n    ? UseQueryResult<TQueryFnData>\n    : // Part 3: responsible for mapping inferred type to results, if no explicit parameter was provided\n    T extends {\n        queryFn?: QueryFunction<unknown, any>\n        select: (data: any) => infer TData\n      }\n    ? UseQueryResult<TData>\n    : T extends { queryFn?: QueryFunction<infer TQueryFnData, any> }\n    ? UseQueryResult<TQueryFnData>\n    : // Fallback\n      UseQueryResult\n\n/**\n * QueriesOptions reducer recursively unwraps function arguments to infer/enforce type param\n */\nexport type QueriesOptions<\n  T extends any[],\n  Result extends any[] = [],\n  Depth extends ReadonlyArray<number> = [],\n> = Depth['length'] extends MAXIMUM_DEPTH\n  ? UseQueryOptionsForUseQueries[]\n  : T extends []\n  ? []\n  : T extends [infer Head]\n  ? [...Result, GetOptions<Head>]\n  : T extends [infer Head, ...infer Tail]\n  ? QueriesOptions<[...Tail], [...Result, GetOptions<Head>], [...Depth, 1]>\n  : unknown[] extends T\n  ? T\n  : // If T is *some* array but we couldn't assign unknown[] to it, then it must hold some known/homogenous type!\n  // use this to infer the param types in the case of Array.map() argument\n  T extends UseQueryOptionsForUseQueries<\n      infer TQueryFnData,\n      infer TError,\n      infer TData,\n      infer TQueryKey\n    >[]\n  ? UseQueryOptionsForUseQueries<TQueryFnData, TError, TData, TQueryKey>[]\n  : // Fallback\n    UseQueryOptionsForUseQueries[]\n\n/**\n * QueriesResults reducer recursively maps type param to results\n */\nexport type QueriesResults<\n  T extends any[],\n  Result extends any[] = [],\n  Depth extends ReadonlyArray<number> = [],\n> = Depth['length'] extends MAXIMUM_DEPTH\n  ? UseQueryResult[]\n  : T extends []\n  ? []\n  : T extends [infer Head]\n  ? [...Result, GetResults<Head>]\n  : T extends [infer Head, ...infer Tail]\n  ? QueriesResults<[...Tail], [...Result, GetResults<Head>], [...Depth, 1]>\n  : T extends UseQueryOptionsForUseQueries<\n      infer TQueryFnData,\n      infer TError,\n      infer TData,\n      any\n    >[]\n  ? // Dynamic-size (homogenous) UseQueryOptions array: map directly to array of results\n    UseQueryResult<unknown extends TData ? TQueryFnData : TData, TError>[]\n  : // Fallback\n    UseQueryResult[]\n\nexport function useQueries<T extends any[]>({\n  queries,\n  context,\n}: {\n  queries: readonly [...QueriesOptions<T>]\n  context?: UseQueryOptions['context']\n}): QueriesResults<T> {\n  const queryClient = useQueryClient({ context })\n  const isRestoring = useIsRestoring()\n  const errorResetBoundary = useQueryErrorResetBoundary()\n\n  const defaultedQueries = React.useMemo(\n    () =>\n      queries.map((options) => {\n        const defaultedOptions = queryClient.defaultQueryOptions(options)\n\n        // Make sure the results are already in fetching state before subscribing or updating options\n        defaultedOptions._optimisticResults = isRestoring\n          ? 'isRestoring'\n          : 'optimistic'\n\n        return defaultedOptions\n      }),\n    [queries, queryClient, isRestoring],\n  )\n\n  defaultedQueries.forEach((query) => {\n    ensureStaleTime(query)\n    ensurePreventErrorBoundaryRetry(query, errorResetBoundary)\n  })\n\n  useClearResetErrorBoundary(errorResetBoundary)\n\n  const [observer] = React.useState(\n    () => new QueriesObserver(queryClient, defaultedQueries),\n  )\n\n  const optimisticResult = observer.getOptimisticResult(defaultedQueries)\n\n  useSyncExternalStore(\n    React.useCallback(\n      (onStoreChange) =>\n        isRestoring\n          ? () => undefined\n          : observer.subscribe(notifyManager.batchCalls(onStoreChange)),\n      [observer, isRestoring],\n    ),\n    () => observer.getCurrentResult(),\n    () => observer.getCurrentResult(),\n  )\n\n  React.useEffect(() => {\n    // Do not notify on updates because of changes in the options because\n    // these changes should already be reflected in the optimistic result.\n    observer.setQueries(defaultedQueries, { listeners: false })\n  }, [defaultedQueries, observer])\n\n  const shouldAtLeastOneSuspend = optimisticResult.some((result, index) =>\n    shouldSuspend(defaultedQueries[index], result, isRestoring),\n  )\n\n  const suspensePromises = shouldAtLeastOneSuspend\n    ? optimisticResult.flatMap((result, index) => {\n        const options = defaultedQueries[index]\n        const queryObserver = observer.getObservers()[index]\n\n        if (options && queryObserver) {\n          if (shouldSuspend(options, result, isRestoring)) {\n            return fetchOptimistic(options, queryObserver, errorResetBoundary)\n          } else if (willFetch(result, isRestoring)) {\n            void fetchOptimistic(options, queryObserver, errorResetBoundary)\n          }\n        }\n        return []\n      })\n    : []\n\n  if (suspensePromises.length > 0) {\n    throw Promise.all(suspensePromises)\n  }\n  const observerQueries = observer.getQueries()\n  const firstSingleResultWhichShouldThrow = optimisticResult.find(\n    (result, index) =>\n      getHasError({\n        result,\n        errorResetBoundary,\n        useErrorBoundary: defaultedQueries[index]?.useErrorBoundary ?? false,\n        query: observerQueries[index]!,\n      }),\n  )\n\n  if (firstSingleResultWhichShouldThrow?.error) {\n    throw firstSingleResultWhichShouldThrow.error\n  }\n\n  return optimisticResult as QueriesResults<T>\n}\n","'use client'\nimport { QueryObserver, parseQueryArgs } from '@tanstack/query-core'\nimport { useBaseQuery } from './useBaseQuery'\nimport type { QueryFunction, QueryKey } from '@tanstack/query-core'\nimport type {\n  DefinedUseQueryResult,\n  UseQueryOptions,\n  UseQueryResult,\n} from './types'\n\n// HOOK\n\nexport function useQuery<\n  TQueryFnData = unknown,\n  TError = unknown,\n  TData = TQueryFnData,\n  TQueryKey extends QueryKey = QueryKey,\n>(\n  options: Omit<\n    UseQueryOptions<TQueryFnData, TError, TData, TQueryKey>,\n    'initialData'\n  > & { initialData?: () => undefined },\n): UseQueryResult<TData, TError>\n\nexport function useQuery<\n  TQueryFnData = unknown,\n  TError = unknown,\n  TData = TQueryFnData,\n  TQueryKey extends QueryKey = QueryKey,\n>(\n  options: Omit<\n    UseQueryOptions<TQueryFnData, TError, TData, TQueryKey>,\n    'initialData'\n  > & { initialData: TQueryFnData | (() => TQueryFnData) },\n): DefinedUseQueryResult<TData, TError>\n\nexport function useQuery<\n  TQueryFnData = unknown,\n  TError = unknown,\n  TData = TQueryFnData,\n  TQueryKey extends QueryKey = QueryKey,\n>(\n  options: UseQueryOptions<TQueryFnData, TError, TData, TQueryKey>,\n): UseQueryResult<TData, TError>\n\nexport function useQuery<\n  TQueryFnData = unknown,\n  TError = unknown,\n  TData = TQueryFnData,\n  TQueryKey extends QueryKey = QueryKey,\n>(\n  queryKey: TQueryKey,\n  options?: Omit<\n    UseQueryOptions<TQueryFnData, TError, TData, TQueryKey>,\n    'queryKey' | 'initialData'\n  > & { initialData?: () => undefined },\n): UseQueryResult<TData, TError>\n\nexport function useQuery<\n  TQueryFnData = unknown,\n  TError = unknown,\n  TData = TQueryFnData,\n  TQueryKey extends QueryKey = QueryKey,\n>(\n  queryKey: TQueryKey,\n  options?: Omit<\n    UseQueryOptions<TQueryFnData, TError, TData, TQueryKey>,\n    'queryKey' | 'initialData'\n  > & { initialData: TQueryFnData | (() => TQueryFnData) },\n): DefinedUseQueryResult<TData, TError>\n\nexport function useQuery<\n  TQueryFnData = unknown,\n  TError = unknown,\n  TData = TQueryFnData,\n  TQueryKey extends QueryKey = QueryKey,\n>(\n  queryKey: TQueryKey,\n  options?: Omit<\n    UseQueryOptions<TQueryFnData, TError, TData, TQueryKey>,\n    'queryKey'\n  >,\n): UseQueryResult<TData, TError>\n\nexport function useQuery<\n  TQueryFnData = unknown,\n  TError = unknown,\n  TData = TQueryFnData,\n  TQueryKey extends QueryKey = QueryKey,\n>(\n  queryKey: TQueryKey,\n  queryFn: QueryFunction<TQueryFnData, TQueryKey>,\n  options?: Omit<\n    UseQueryOptions<TQueryFnData, TError, TData, TQueryKey>,\n    'queryKey' | 'queryFn' | 'initialData'\n  > & { initialData?: () => undefined },\n): UseQueryResult<TData, TError>\n\nexport function useQuery<\n  TQueryFnData = unknown,\n  TError = unknown,\n  TData = TQueryFnData,\n  TQueryKey extends QueryKey = QueryKey,\n>(\n  queryKey: TQueryKey,\n  queryFn: QueryFunction<TQueryFnData, TQueryKey>,\n  options?: Omit<\n    UseQueryOptions<TQueryFnData, TError, TData, TQueryKey>,\n    'queryKey' | 'queryFn' | 'initialData'\n  > & { initialData: TQueryFnData | (() => TQueryFnData) },\n): DefinedUseQueryResult<TData, TError>\n\nexport function useQuery<\n  TQueryFnData = unknown,\n  TError = unknown,\n  TData = TQueryFnData,\n  TQueryKey extends QueryKey = QueryKey,\n>(\n  queryKey: TQueryKey,\n  queryFn: QueryFunction<TQueryFnData, TQueryKey>,\n  options?: Omit<\n    UseQueryOptions<TQueryFnData, TError, TData, TQueryKey>,\n    'queryKey' | 'queryFn'\n  >,\n): UseQueryResult<TData, TError>\n\nexport function useQuery<\n  TQueryFnData,\n  TError,\n  TData = TQueryFnData,\n  TQueryKey extends QueryKey = QueryKey,\n>(\n  arg1: TQueryKey | UseQueryOptions<TQueryFnData, TError, TData, TQueryKey>,\n  arg2?:\n    | QueryFunction<TQueryFnData, TQueryKey>\n    | UseQueryOptions<TQueryFnData, TError, TData, TQueryKey>,\n  arg3?: UseQueryOptions<TQueryFnData, TError, TData, TQueryKey>,\n): UseQueryResult<TData, TError> {\n  const parsedOptions = parseQueryArgs(arg1, arg2, arg3)\n  return useBaseQuery(parsedOptions, QueryObserver)\n}\n","'use client'\nimport * as React from 'react'\n\nimport { notifyManager } from '@tanstack/query-core'\nimport { useSyncExternalStore } from './useSyncExternalStore'\nimport { useQueryErrorResetBoundary } from './QueryErrorResetBoundary'\nimport { useQueryClient } from './QueryClientProvider'\nimport { useIsRestoring } from './isRestoring'\nimport {\n  ensurePreventErrorBoundaryRetry,\n  getHasError,\n  useClearResetErrorBoundary,\n} from './errorBoundaryUtils'\nimport { ensureStaleTime, fetchOptimistic, shouldSuspend } from './suspense'\nimport type { QueryKey, QueryObserver } from '@tanstack/query-core'\nimport type { UseBaseQueryOptions } from './types'\n\nexport function useBaseQuery<\n  TQueryFnData,\n  TError,\n  TData,\n  TQueryData,\n  TQueryKey extends QueryKey,\n>(\n  options: UseBaseQueryOptions<\n    TQueryFnData,\n    TError,\n    TData,\n    TQueryData,\n    TQueryKey\n  >,\n  Observer: typeof QueryObserver,\n) {\n  const queryClient = useQueryClient({ context: options.context })\n  const isRestoring = useIsRestoring()\n  const errorResetBoundary = useQueryErrorResetBoundary()\n  const defaultedOptions = queryClient.defaultQueryOptions(options)\n\n  // Make sure results are optimistically set in fetching state before subscribing or updating options\n  defaultedOptions._optimisticResults = isRestoring\n    ? 'isRestoring'\n    : 'optimistic'\n\n  // Include callbacks in batch renders\n  if (defaultedOptions.onError) {\n    defaultedOptions.onError = notifyManager.batchCalls(\n      defaultedOptions.onError,\n    )\n  }\n\n  if (defaultedOptions.onSuccess) {\n    defaultedOptions.onSuccess = notifyManager.batchCalls(\n      defaultedOptions.onSuccess,\n    )\n  }\n\n  if (defaultedOptions.onSettled) {\n    defaultedOptions.onSettled = notifyManager.batchCalls(\n      defaultedOptions.onSettled,\n    )\n  }\n\n  ensureStaleTime(defaultedOptions)\n  ensurePreventErrorBoundaryRetry(defaultedOptions, errorResetBoundary)\n\n  useClearResetErrorBoundary(errorResetBoundary)\n\n  const [observer] = React.useState(\n    () =>\n      new Observer<TQueryFnData, TError, TData, TQueryData, TQueryKey>(\n        queryClient,\n        defaultedOptions,\n      ),\n  )\n\n  const result = observer.getOptimisticResult(defaultedOptions)\n\n  useSyncExternalStore(\n    React.useCallback(\n      (onStoreChange) => {\n        const unsubscribe = isRestoring\n          ? () => undefined\n          : observer.subscribe(notifyManager.batchCalls(onStoreChange))\n\n        // Update result to make sure we did not miss any query updates\n        // between creating the observer and subscribing to it.\n        observer.updateResult()\n\n        return unsubscribe\n      },\n      [observer, isRestoring],\n    ),\n    () => observer.getCurrentResult(),\n    () => observer.getCurrentResult(),\n  )\n\n  React.useEffect(() => {\n    // Do not notify on updates because of changes in the options because\n    // these changes should already be reflected in the optimistic result.\n    observer.setOptions(defaultedOptions, { listeners: false })\n  }, [defaultedOptions, observer])\n\n  // Handle suspense\n  if (shouldSuspend(defaultedOptions, result, isRestoring)) {\n    throw fetchOptimistic(defaultedOptions, observer, errorResetBoundary)\n  }\n\n  // Handle error boundary\n  if (\n    getHasError({\n      result,\n      errorResetBoundary,\n      useErrorBoundary: defaultedOptions.useErrorBoundary,\n      query: observer.getCurrentQuery(),\n    })\n  ) {\n    throw result.error\n  }\n\n  // Handle result property usage tracking\n  return !defaultedOptions.notifyOnChangeProps\n    ? observer.trackResult(result)\n    : result\n}\n","'use client'\n// Temporary workaround due to an issue with react-native uSES - https://github.com/TanStack/query/pull/3601\nimport { useSyncExternalStore as uSES } from 'use-sync-external-store/shim/index.js'\n\nexport const useSyncExternalStore = uSES\n"],"names":["_excluded","_extends","Object","assign","bind","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","propTypes","body","PropTypes","className","color","cssModule","innerRef","inverse","outline","tag","tagPropType","Card","props","_props$tag","Tag","attributes","classes","mapToCssModules","classNames","concat","React","ref","CardBody","bottom","top","CardImg","cardImgClassName","CardTitle","_defineProperty","obj","value","defineProperty","enumerable","configurable","writable","colWidths","stringOrNumberProp","columnProps","size","order","offset","xs","sm","md","lg","xl","xxl","widths","getColumnSizeClass","isXs","colWidth","colSize","Col","_props$widths","_getColumnClasses","modifiedAttributes","colClasses","undefined","forEach","columnProp","isObject","_classNames","colSizeInterfix","colClass","push","_colClass","getColumnClasses","fluid","Container","containerClass","rowColWidths","rowColsPropType","noGutters","deprecated","Row","e","require","k","is","a","b","l","useState","m","useEffect","n","useLayoutEffect","p","useDebugValue","r","getSnapshot","d","f","u","window","document","createElement","inst","c","g","exports","useSyncExternalStore","module","QueryObserver","_Subscribable","_inherits","_super","_createSuper","client","options","_this","_classCallCheck","trackedProps","Set","selectError","bindMethods","setOptions","_createClass","remove","refetch","listeners","currentQuery","addObserver","shouldFetchOnMount","executeFetch","updateTimers","hasListeners","destroy","shouldFetchOn","refetchOnReconnect","refetchOnWindowFocus","clearStaleTimeout","clearRefetchInterval","removeObserver","notifyOptions","prevOptions","prevQuery","defaultQueryOptions","shallowEqualObjects","getQueryCache","notify","type","query","observer","enabled","Error","queryKey","updateQuery","mounted","shouldFetchOptionally","updateResult","staleTime","updateStaleTimeout","nextRefetchInterval","computeRefetchInterval","currentRefetchInterval","updateRefetchInterval","build","result","createResult","optimisticResult","keepPreviousData","placeholderData","isPlaceholderData","getCurrentResult","shouldAssignObserverCurrentProperties","currentResult","currentResultOptions","currentResultState","state","_this2","trackedResult","get","add","_ref","refetchPage","objectWithoutPropertiesLoose","fetch","_objectSpread","meta","_this3","defaultedOptions","isFetchingOptimistic","then","fetchOptions","_fetchOptions$cancelR","_this4","cancelRefetch","promise","throwOnError","catch","noop","_this5","isServer","isStale","isValidTimeout","timeout","timeUntilStale","dataUpdatedAt","staleTimeoutId","setTimeout","_this$options$refetch","refetchInterval","data","nextInterval","_this6","refetchIntervalId","setInterval","refetchIntervalInBackground","focusManager","isFocused","clearTimeout","clearInterval","prevResult","prevResultState","prevResultOptions","queryChange","queryInitialState","currentQueryInitialState","prevQueryResult","previousQueryResult","error","errorUpdatedAt","fetchStatus","status","isPreviousData","_optimisticResults","fetchOnMount","fetchOptionally","canFetch","networkMode","isSuccess","select","selectFn","selectResult","replaceData","process","Date","now","isFetching","isLoading","isError","isInitialLoading","failureCount","fetchFailureCount","failureReason","fetchFailureReason","errorUpdateCount","isFetched","dataUpdateCount","isFetchedAfterMount","isRefetching","isLoadingError","isPaused","isRefetchError","_this7","nextResult","defaultNotifyOptions","cache","notifyOnChangeProps","notifyOnChangePropsValue","includedProps","useErrorBoundary","some","typedKey","has","shouldNotifyListeners","action","onSuccess","manual","isCancelledError","onError","_this8","notifyManager","batch","_this$options$onSucce","_this$options","_this$options$onSettl","_this$options2","onSettled","_this$options$onError","_this$options3","_this$options$onSettl2","_this$options4","_ref2","listener","Subscribable","retryOnMount","shouldLoadOnMount","refetchOnMount","field","suspense","isStaleByTime","createValue","clearReset","isReset","reset","QueryErrorResetBoundaryContext","useQueryErrorResetBoundary","errorResetBoundary","useClearResetErrorBoundary","getHasError","_useErrorBoundary","params","_toConsumableArray","IsRestoringContext","useIsRestoring","Provider","ensureStaleTime","willFetch","isRestoring","shouldSuspend","fetchOptimistic","QueriesObserver","queries","observers","observersMap","setQueries","subscribe","onUpdate","prevObservers","newObserverMatches","findMatchingObservers","match","defaultedQueryOptions","newObservers","map","newObserversMap","fromEntries","queryHash","newResult","hasIndexChange","index","difference","getCurrentQuery","getOptimisticResult","prevObserversMap","Map","matchingObservers","flatMap","matchedQueryHashes","unmatchedQueries","filter","matchingObserversSet","unmatchedObservers","prevObserver","getObserver","currentObserver","newOrReusedObservers","previouslyUsedObserver","sort","replaceAt","useQueries","context","defaultedQueries","ensurePreventErrorBoundaryRetry","_React$useState","queryClient","_slicedToArray","onStoreChange","batchCalls","suspensePromises","queryObserver","getObservers","Promise","all","observerQueries","getQueries","_defaultedQueries$ind","_defaultedQueries$ind2","firstSingleResultWhichShouldThrow","useQuery","arg1","arg2","arg3","Observer","unsubscribe","trackResult","useBaseQuery","useSyncExternalStore$1"],"sourceRoot":""}