{"version":3,"file":"static/js/158.212c826a.chunk.js","mappings":"8LACMA,EACJ,8FAkBD,SAAAC,IAAA,OAAAA,GAAAC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAhBM,SAAAC,EAA6BC,GAAkB,OAAAH,EAAAA,EAAAA,KAAAI,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACvCC,MAAMX,EAA0BM,GAC1CM,MAAK,SAACC,GAAC,OAAKA,EAAEC,MAAM,IACpBF,MAAK,SAACG,GACL,IAAMC,EAAkBC,OAAOC,KAAKH,EAAKI,MAAMC,OAAO,GAChDC,EAASN,EAAKI,MAAMC,MAAMJ,GAAiBM,UAEjD,GAA+B,MAArB,OAAND,QAAM,IAANA,OAAM,EAANA,EAAQE,gBACV,MAAO,CACLP,gBAAAA,EACAQ,UAAiB,OAANH,QAAM,IAANA,OAAM,EAANA,EAA0B,gBACrCI,kBAAyB,OAANJ,QAAM,IAANA,OAAM,EAANA,EAAS,sBAC5BK,WAAkB,OAANL,QAAM,IAANA,OAAM,EAANA,EAAwB,cAG1C,IAAG,KAAD,SAAAb,EAAAmB,OAAA,SAAAnB,EAAAoB,MAAA,wBAAApB,EAAAqB,OAAA,GAAAxB,EAAA,MACLyB,MAAA,KAAAC,UAAA,C,wBCbYC,EAAM,WAIjB,SAAAA,EAAYC,EAAcC,IAAuBC,EAAAA,EAAAA,GAAA,KAAAH,GAAA,KAHjDC,UAAI,OACJC,UAAI,EAGFE,KAAKH,KAAOA,EACZG,KAAKF,KAAOA,CACd,CAMC,OANAG,EAAAA,EAAAA,GAAAL,EAAA,EAAAM,IAAA,+BAAAC,MAED,WACE,IAAIC,EAAWJ,KAAKH,KAAKQ,MAAM,KAE/B,OADAD,EAAWA,EAASE,KAAI,SAACC,GAAI,OAAKA,EAAK,GAAGC,cAAgBD,EAAKE,MAAM,EAAE,KACvDC,KAAK,IACvB,KAACd,CAAA,CAbgB,GCENe,EAAQ,eAAAC,GAAA9C,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAC,IAAA,IAAA4C,EAAA,OAAA9C,EAAAA,EAAAA,KAAAI,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACCC,MACrB,kCACAC,MAA2B,SAACC,GAAC,OAAKA,EAAEC,MAAM,IAAE,KAAD,EAF/B,OAARmC,EAAQzC,EAAAoB,KAAApB,EAAAmB,OAAA,SAIPsB,EAASP,KAAI,SAACQ,EAAMC,GAAK,OAAAC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAC3BF,GAAI,IACPG,GAAIF,EACJG,OAAQ,IAAItB,EAAOkB,EAAKI,SAAO,KAC9B,wBAAA9C,EAAAqB,OAAA,GAAAxB,EAAA,KACJ,kBAVoB,OAAA2C,EAAAlB,MAAA,KAAAC,UAAA,KCJRwB,EAAW,WACtB,IAAAC,GAAgDC,EAAAA,EAAAA,GAAS,CAAC,SAAUV,GAAtDW,EAASF,EAAfzC,KAAiB4C,EAASH,EAATG,UAAWC,EAAOJ,EAAPI,QAE9BC,EAAiC,OAATH,QAAS,IAATA,OAAS,EAATA,EAAWhB,KAAI,SAACQ,GAAI,MAAM,CACtDY,SAAU,CAAC,SAAUZ,EAAKI,OAAOrB,MACjC8B,QAAS,kBHNN,SAA4BC,GAAA,OAAA/D,EAAA6B,MAAC,KAADC,UAAA,CGMhBkC,CAAcf,EAAKI,OAAOY,+BAA+B,EACxEC,UAAWT,EACZ,IAEKU,GAAUC,EAAAA,EAAAA,GAAW,CACzBC,QAA8B,OAArBT,QAAqB,IAArBA,EAAAA,EAAyB,KAG9BU,EACJb,GACAU,EAAQ1B,KAAI,SAACR,EAAMsC,GAAC,OAAApB,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACfM,EAAUc,IAAE,IACflB,OAAQ,IAAItB,EAAO0B,EAAUc,GAAGlB,OAAOrB,KAAMC,EAAKnB,OAAK,IAGrD0D,EAAqBL,EAAQM,MAAK,SAACxC,GAAI,OAAKA,EAAKyB,SAAS,IAEhE,MAAO,CACL5C,KAAY,OAANwD,QAAM,IAANA,EAAAA,EAAUb,EAChBC,UAAWA,GAAac,EACxBb,QAAAA,EAEJ,C,uDChCA,IAGae,EAA4B,SAACC,GAAmC,IAAjBC,EAAK9C,UAAA+C,OAAA,QAAAC,IAAAhD,UAAA,GAAAA,UAAA,GAAG,IAClE,MAAM,GAANiD,OAJe,gDAIGA,OAAGJ,GAAQI,OAHlB,OAGyBA,OAAGH,EACzC,C,sOCLII,EAAY,CAAC,YAAa,YAAa,OAC3C,SAASC,IAAiS,OAApRA,EAAWjE,OAAOkE,OAASlE,OAAOkE,OAAOC,OAAS,SAAUC,GAAU,IAAK,IAAIb,EAAI,EAAGA,EAAIzC,UAAU+C,OAAQN,IAAK,CAAE,IAAIc,EAASvD,UAAUyC,GAAI,IAAK,IAAIlC,KAAOgD,EAAcrE,OAAOsE,UAAUC,eAAeC,KAAKH,EAAQhD,KAAQ+C,EAAO/C,GAAOgD,EAAOhD,GAAU,CAAE,OAAO+C,CAAQ,EAAUH,EAASpD,MAAMM,KAAML,UAAY,CAClV,SAAS2D,EAAyBJ,EAAQK,GAAY,GAAc,MAAVL,EAAgB,MAAO,CAAC,EAAG,IAAkEhD,EAAKkC,EAAnEa,EACzF,SAAuCC,EAAQK,GAAY,GAAc,MAAVL,EAAgB,MAAO,CAAC,EAAG,IAA2DhD,EAAKkC,EAA5Da,EAAS,CAAC,EAAOO,EAAa3E,OAAOC,KAAKoE,GAAqB,IAAKd,EAAI,EAAGA,EAAIoB,EAAWd,OAAQN,IAAOlC,EAAMsD,EAAWpB,GAAQmB,EAASE,QAAQvD,IAAQ,IAAa+C,EAAO/C,GAAOgD,EAAOhD,IAAQ,OAAO+C,CAAQ,CADhNS,CAA8BR,EAAQK,GAAuB,GAAI1E,OAAO8E,sBAAuB,CAAE,IAAIC,EAAmB/E,OAAO8E,sBAAsBT,GAAS,IAAKd,EAAI,EAAGA,EAAIwB,EAAiBlB,OAAQN,IAAOlC,EAAM0D,EAAiBxB,GAAQmB,EAASE,QAAQvD,IAAQ,GAAkBrB,OAAOsE,UAAUU,qBAAqBR,KAAKH,EAAQhD,KAAgB+C,EAAO/C,GAAOgD,EAAOhD,GAAQ,CAAE,OAAO+C,CAAQ,CAM3e,IAAIa,EAAY,CAEdC,UAAWC,IAAAA,OAEXC,UAAWD,IAAAA,OAEXE,IAAKC,EAAAA,IAEP,SAASC,EAAaC,GACpB,IAAIN,EAAYM,EAAMN,UACpBE,EAAYI,EAAMJ,UAClBK,EAAaD,EAAMH,IACnBK,OAAqB,IAAfD,EAAwB,MAAQA,EACtCE,EAAalB,EAAyBe,EAAOxB,GAC3C4B,GAAUC,EAAAA,EAAAA,IAAgBC,IAAWZ,EAAW,iBAAkBE,GACtE,OAAoBW,EAAAA,cAAoBL,EAAKzB,EAAS,CAAC,EAAG0B,EAAY,CACpET,UAAWU,IAEf,CACAL,EAAaN,UAAYA,EACzB,Q,oBC3BA,GAAgB,KAAO,yBAAyB,MAAQ,2B,SCuDxD,EA9CmB,SAAHlD,GAAqC,IAADiE,EAAAC,EAAAC,EAAAC,EAAAC,EAA9B/D,EAAMN,EAANM,OACpB,OACEgE,EAAAA,EAAAA,MAACC,EAAAA,EAAI,CAACpB,UAAS,SAAAnB,OAAWwC,EAAMC,MAAOC,SAAA,EACrCC,EAAAA,EAAAA,KAACC,EAAAA,EAAO,CACNzB,UAAWqB,EAAMK,MACjBC,KAAG,EACHC,IACa,QAAXd,EAAA3D,EAAOpB,YAAI,IAAA+E,GAAXA,EAAazF,WACTmD,EAAAA,EAAAA,GAA0BrB,EAAOpB,KAAKV,WACtCwG,EAENC,QAAQ,OACRC,IAAK5E,EAAOrB,QAEdqF,EAAAA,EAAAA,MAACa,EAAAA,EAAQ,CAAAT,SAAA,EACPC,EAAAA,EAAAA,KAACS,EAAAA,EAAS,CAAC9B,IAAI,KAAIoB,SAAEpE,EAAOrB,QAChB,QAAXiF,EAAA5D,EAAOpB,YAAI,IAAAgF,OAAA,EAAXA,EAAazF,qBACZkG,EAAAA,EAAAA,KAACnB,EAAY,CAACL,UAAWqB,EAAMa,SAASX,SAC1B,QAD0BP,EACrC7D,EAAOpB,YAAI,IAAAiF,OAAA,EAAXA,EAAa1F,qBAGN,QAAX2F,EAAA9D,EAAOpB,YAAI,IAAAkF,OAAA,EAAXA,EAAapG,mBACZ2G,EAAAA,EAAAA,KAAA,KACEW,KAAI,8CAAAtD,OAAgD1B,EAAOpB,KAAKlB,iBAChEqE,OAAO,SACPkD,IAAI,aACJpC,UAAU,UAASuB,SACpB,uBAIS,QAAXL,EAAA/D,EAAOpB,YAAI,IAAAmF,OAAA,EAAXA,EAAa3F,cACZiG,EAAAA,EAAAA,KAAA,KACEW,KAAI,mCAAAtD,OAAqC1B,EAAOpB,KAAKR,YACrD2D,OAAO,SACPkD,IAAI,aACJpC,UAAU,UAASuB,SACpB,iCAOX,E,UClDac,EAAgB,SAAHxF,GAAoD,IAA9CyF,EAASzF,EAATyF,UAAWC,EAAO1F,EAAP0F,QACzC,OACEf,EAAAA,EAAAA,KAAA,UAAQxB,UAAU,iCAAiCuC,QAASA,EAAQhB,SACjEe,EAAS,eAAoB,eAGpC,ECHaE,EAAc,SAAH3F,GAAoC,IAA9BE,EAAIF,EAAJE,KAC5B0F,GAAkCC,EAAAA,EAAAA,WAAS,GAAKC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAzCH,EAASK,EAAA,GAAEE,EAAYF,EAAA,GAExBG,EAAQ/F,EAAK+F,MAAMvG,KAAI,SAACwG,GAAI,OAAKvB,EAAAA,EAAAA,KAAA,KAAAD,SAA2BwB,GAAnBA,EAAKrG,MAAM,EAAG,GAAc,IACrEsG,EAAiBF,EAAMG,QAAO,SAACC,EAAGlG,GAAK,OAAKA,EAAQ,CAAC,IACrDmG,EAA0BL,EAAMnE,OAAS,EAM/C,OAJAyE,EAAAA,EAAAA,YAAU,WACRP,GAAa,EACf,GAAG,CAAC9F,KAGFoE,EAAAA,EAAAA,MAAAkC,EAAAA,SAAA,CAAA9B,SAAA,EACEJ,EAAAA,EAAAA,MAAA,OACEnB,UAAU,kBACVqB,MAAO,CACLiC,UAAW,SACX/B,SAAA,EAEFC,EAAAA,EAAAA,KAAA,MAAIxB,UAAU,OAAMuB,SAAExE,EAAKwG,QAC1BjB,EAAYU,EAAiBF,KAE/BK,IACC3B,EAAAA,EAAAA,KAACa,EAAa,CACZC,UAAWA,EACXC,QAAS,kBAAMM,GAAcP,EAAU,IAG1CA,EAAS,IAAAzD,OAAO9B,EAAKyG,UAAS,WAAY,KAGjD,EC3BaC,EAAc,SAAH5G,GAAoC,IAA9BE,EAAIF,EAAJE,KAC5B,OACEoE,EAAAA,EAAAA,MAACuC,EAAAA,EAAS,CAAC1D,UAAU,MAAKuB,SAAA,EACxBJ,EAAAA,EAAAA,MAACwC,EAAAA,EAAG,CAAC3D,UAAU,4CAA2CuB,SAAA,EACxDC,EAAAA,EAAAA,KAACoC,EAAAA,EAAG,CAACC,IAAE,EAAC7D,UAAU,aAAYuB,UAC5BC,EAAAA,EAAAA,KAACgB,EAAW,CAACzF,KAAMA,OAErByE,EAAAA,EAAAA,KAACoC,EAAAA,EAAG,CACFE,IAAE,EACF9D,UAAS,4DAA8DuB,UAEvEC,EAAAA,EAAAA,KAACuC,EAAU,CAAC5G,OAAQJ,EAAKI,eAI7BqE,EAAAA,EAAAA,KAAA,OAAKxB,UAAU,mBAAkBuB,UAC/BC,EAAAA,EAAAA,KAACwC,EAAAA,GAAI,CACHC,GAAIC,EAAAA,GAAMC,MAAMjH,GAAGH,EAAKG,GAAK,IAAM,GAAKH,EAAKG,GAAKH,EAAKG,GAAK,GAC5D8C,UAAU,0BAAyBuB,SACpC,eAMT,E,UCJA,MA5BA,WACE,IAAA6C,GAAqChH,EAAAA,EAAAA,KAA7BxC,EAAIwJ,EAAJxJ,KAAM4C,EAAS4G,EAAT5G,UAAWC,EAAO2G,EAAP3G,QAEjBP,GAAOmH,EAAAA,EAAAA,MAAPnH,GAER,IAAKA,GAAMoH,OAAOC,MAAMC,SAAStH,IAC/B,MAAMuH,MAAM,qBAGd,IAAMC,EAASF,SAAStH,GAExB,GAAIM,EACF,OAAOgE,EAAAA,EAAAA,KAAA6B,EAAAA,SAAA,CAAA9B,SAAE,iBAGX,GAAI9D,IAAY7C,EACd,MAAM,IAAI6J,MAGZ,IAAM1H,EAAOnC,EAAK+J,MAAK,SAACC,GAAE,OAAKA,EAAG1H,KAAOwH,CAAM,IAE/C,IAAK3H,EACH,MAAM,IAAI0H,MAGZ,OAAOjD,EAAAA,EAAAA,KAACiC,EAAW,CAAC1G,KAAMA,GAC5B,C","sources":["modules/common/services/misc/getAuthorMeta.ts","modules/common/types/poems.ts","modules/common/services/poems/poems.ts","modules/common/queries/usePoems.ts","modules/common/utility/buildImageUrlFromFileName.ts","../node_modules/reactstrap/esm/CardSubtitle.js","webpack://30poems/./src/modules/PoemDetails/components/AuthorCard/AuthorCard.module.css?787c","modules/PoemDetails/components/AuthorCard/index.tsx","modules/common/components/ShowAllButton/ShowAllButton.tsx","modules/PoemDetails/components/PoemContent/index.tsx","modules/PoemDetails/index.tsx","views/DetailPage.tsx"],"sourcesContent":["// This API gives the wikidata id and a short description for an author given the name of the author\nconst API_URL_FOR_WIKIDATA_ID =\n  \"https://en.wikipedia.org/w/api.php?action=query&origin=*&prop=pageprops&format=json&titles=\";\n\nexport async function getAuthorMeta(authorName: string) {\n  return await fetch(API_URL_FOR_WIKIDATA_ID + authorName)\n    .then((r) => r.json())\n    .then((data) => {\n      const wikipediaPageId = Object.keys(data.query.pages)[0];\n      const entity = data.query.pages[wikipediaPageId].pageprops;\n\n      if (entity?.disambiguation !== \"\") {\n        return {\n          wikipediaPageId,\n          imageName: entity?.[\"page_image_free\"],\n          authorDescription: entity?.[\"wikibase-shortdesc\"],\n          wikidataId: entity?.[\"wikibase_item\"],\n        };\n      }\n    });\n}\n","export interface AuthorWikiData {\n  wikipediaPageId: string;\n  imageName: string;\n  authorDescription?: string;\n  wikidataId?: string;\n}\n\nexport class Author {\n  name: string;\n  meta?: AuthorWikiData;\n\n  constructor(name: string, meta?: AuthorWikiData) {\n    this.name = name;\n    this.meta = meta;\n  }\n\n  prepareNameForWikipediaQuery() {\n    let splitted = this.name.split(\" \");\n    splitted = splitted.map((word) => word[0].toUpperCase() + word.slice(1));\n    return splitted.join(\"_\");\n  }\n}\n\nexport interface Poem {\n  title: string;\n  author: Author;\n  lines: string[];\n  linecount: number;\n  id: number;\n}\n","import { Author, Poem } from \"src/modules/common/types/poems\";\n\nexport type GetPoemsResponseData = Array<{\n  title: string;\n  author: string;\n  lines: string[];\n  linecount: number;\n}>;\n\nexport const getPoems = async (): Promise<Poem[]> => {\n  const response = await fetch(\n    \"https://poetrydb.org/random/30\"\n  ).then<GetPoemsResponseData>((r) => r.json());\n\n  return response.map((poem, index) => ({\n    ...poem,\n    id: index,\n    author: new Author(poem.author),\n  }));\n};\n","import { useQueries, useQuery } from \"@tanstack/react-query\";\nimport { getAuthorMeta } from \"src/modules/common/services/misc/getAuthorMeta\";\nimport { getPoems } from \"src/modules/common/services/poems/poems\";\nimport { Author } from \"../types\";\n\nexport const usePoems = () => {\n  const { data: poemsData, isLoading, isError } = useQuery([\"poems\"], getPoems);\n\n  const authorMetadataQueries = poemsData?.map((poem) => ({\n    queryKey: [\"author\", poem.author.name],\n    queryFn: () => getAuthorMeta(poem.author.prepareNameForWikipediaQuery()),\n    enabled: !!poemsData,\n  }));\n\n  const results = useQueries({\n    queries: authorMetadataQueries ?? [],\n  });\n\n  const result =\n    poemsData &&\n    results.map((meta, i) => ({\n      ...poemsData[i],\n      author: new Author(poemsData[i].author.name, meta.data),\n    }));\n\n  const isSomeQueryLoading = results.some((meta) => meta.isLoading);\n\n  return {\n    data: result ?? poemsData,\n    isLoading: isLoading || isSomeQueryLoading,\n    isError,\n  };\n};\n","const BASE_URL = \"https://commons.wikimedia.org/w/thumb.php?f=\";\nconst SIZE = \"&w=\";\n\nexport const buildImageUrlFromFileName = (filename: string, width = 200) => {\n  return `${BASE_URL}${filename}${SIZE}${width}`;\n};\n","var _excluded = [\"className\", \"cssModule\", \"tag\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  /** Add custom class */\n  className: PropTypes.string,\n  /** Change underlying component's CSS base class name */\n  cssModule: PropTypes.object,\n  /** Set a custom element for this component */\n  tag: tagPropType\n};\nfunction CardSubtitle(props) {\n  var className = props.className,\n    cssModule = props.cssModule,\n    _props$tag = props.tag,\n    Tag = _props$tag === void 0 ? 'div' : _props$tag,\n    attributes = _objectWithoutProperties(props, _excluded);\n  var classes = mapToCssModules(classNames(className, 'card-subtitle'), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n}\nCardSubtitle.propTypes = propTypes;\nexport default CardSubtitle;","// extracted by mini-css-extract-plugin\nexport default {\"card\":\"AuthorCard_card__oX0n5\",\"image\":\"AuthorCard_image__k6HtF\"};","import { Card, CardBody, CardImg, CardSubtitle, CardTitle } from \"reactstrap\";\nimport defaultAuthorImage from \"src/modules/common/assets/images/missing.jpg\";\nimport { Author } from \"src/modules/common/types\";\nimport { buildImageUrlFromFileName } from \"src/modules/common/utility/buildImageUrlFromFileName\";\nimport style from \"./AuthorCard.module.css\";\n\ninterface AuthorCardProps {\n  author: Author;\n}\n\nconst AuthorCard = ({ author }: AuthorCardProps) => {\n  return (\n    <Card className={`h-100 ${style.card}`}>\n      <CardImg\n        className={style.image}\n        top\n        src={\n          author.meta?.imageName\n            ? buildImageUrlFromFileName(author.meta.imageName)\n            : defaultAuthorImage\n        }\n        loading=\"lazy\"\n        alt={author.name}\n      />\n      <CardBody>\n        <CardTitle tag=\"h3\">{author.name}</CardTitle>\n        {author.meta?.authorDescription && (\n          <CardSubtitle className={style.overflow}>\n            {author.meta?.authorDescription}\n          </CardSubtitle>\n        )}\n        {author.meta?.wikipediaPageId && (\n          <a\n            href={`https://en.wikipedia.org/w/index.php?curid=${author.meta.wikipediaPageId}`}\n            target=\"_blank\"\n            rel=\"noreferrer\"\n            className=\"d-block\"\n          >\n            Vedi su Wikipedia\n          </a>\n        )}\n        {author.meta?.wikidataId && (\n          <a\n            href={`https://www.wikidata.org/entity/${author.meta.wikidataId}`}\n            target=\"_blank\"\n            rel=\"noreferrer\"\n            className=\"d-block\"\n          >\n            Guarda dati su wikidata\n          </a>\n        )}\n      </CardBody>\n    </Card>\n  );\n};\n\nexport default AuthorCard;\n","export interface ShowAllButtonProps {\n  collapsed: boolean;\n  onClick: () => void;\n}\nexport const ShowAllButton = ({ collapsed, onClick }: ShowAllButtonProps) => {\n  return (\n    <button className=\"btn btn-link text-primary ps-0\" onClick={onClick}>\n      {collapsed ? `Mostra tutto` : \"Mostra meno\"}\n    </button>\n  );\n};\n","import { useEffect, useState } from \"react\";\nimport { ShowAllButton } from \"src/modules/common/components/ShowAllButton/ShowAllButton\";\nimport { Poem } from \"src/modules/common/types\";\n\nexport interface PoemContentProps {\n  poem: Poem;\n}\nexport const PoemContent = ({ poem }: PoemContentProps) => {\n  const [collapsed, setCollapsed] = useState(true);\n\n  const lines = poem.lines.map((line) => <p key={line.slice(0, 6)}>{line}</p>);\n  const firstFiveLines = lines.filter((_, index) => index < 5);\n  const isShowMoreButtonVisible = lines.length > 5;\n\n  useEffect(() => {\n    setCollapsed(true);\n  }, [poem]);\n\n  return (\n    <>\n      <div\n        className=\"overflow-scroll\"\n        style={{\n          maxHeight: \"500px\",\n        }}\n      >\n        <h1 className=\"mb-3\">{poem.title}</h1>\n        {collapsed ? firstFiveLines : lines}\n      </div>\n      {isShowMoreButtonVisible && (\n        <ShowAllButton\n          collapsed={collapsed}\n          onClick={() => setCollapsed(!collapsed)}\n        />\n      )}\n      {collapsed ? `(${poem.linecount} versi)` : \"\"}\n    </>\n  );\n};\n","import { Link } from \"react-router-dom\";\nimport { Col, Container, Row } from \"reactstrap\";\nimport { Poem } from \"src/modules/common/types\";\nimport { links } from \"src/router\";\nimport AuthorCard from \"./components/AuthorCard\";\nimport { PoemContent } from \"./components/PoemContent\";\n\ntype PoemDetailsProps = {\n  poem: Poem;\n};\n\nexport const PoemDetails = ({ poem }: PoemDetailsProps) => {\n  return (\n    <Container className=\"p-3\">\n      <Row className=\"justify-content-between align-items-start\">\n        <Col sm className=\"text-start\">\n          <PoemContent poem={poem} />\n        </Col>\n        <Col\n          md\n          className={`mt-3 d-flex justify-content-center justify-content-sm-end`}\n        >\n          <AuthorCard author={poem.author} />\n        </Col>\n      </Row>\n\n      <div className=\"text-center mt-3\">\n        <Link\n          to={links.poems.id(poem.id + 1 === 30 ? poem.id : poem.id + 1)}\n          className=\"btn btn-outline-primary\"\n        >\n          Cambia\n        </Link>\n      </div>\n    </Container>\n  );\n};\n","import { useParams } from \"react-router-dom\";\nimport { PoemDetails } from \"src/modules/PoemDetails\";\nimport { usePoems } from \"../modules/common/queries/usePoems\";\n\nfunction DetailPage() {\n  const { data, isLoading, isError } = usePoems();\n\n  const { id } = useParams();\n\n  if (!id || Number.isNaN(parseInt(id))) {\n    throw Error(\"invalid parameter\");\n  }\n\n  const poemId = parseInt(id);\n\n  if (isLoading) {\n    return <>isLoading...</>;\n  }\n\n  if (isError || !data) {\n    throw new Error();\n  }\n\n  const poem = data.find((el) => el.id === poemId);\n\n  if (!poem) {\n    throw new Error();\n  }\n\n  return <PoemDetails poem={poem} />;\n}\n\nexport default DetailPage;\n"],"names":["API_URL_FOR_WIKIDATA_ID","_getAuthorMeta","_asyncToGenerator","_regeneratorRuntime","mark","_callee","authorName","wrap","_context","prev","next","fetch","then","r","json","data","wikipediaPageId","Object","keys","query","pages","entity","pageprops","disambiguation","imageName","authorDescription","wikidataId","abrupt","sent","stop","apply","arguments","Author","name","meta","_classCallCheck","this","_createClass","key","value","splitted","split","map","word","toUpperCase","slice","join","getPoems","_ref","response","poem","index","_objectSpread","id","author","usePoems","_useQuery","useQuery","poemsData","isLoading","isError","authorMetadataQueries","queryKey","queryFn","_x","getAuthorMeta","prepareNameForWikipediaQuery","enabled","results","useQueries","queries","result","i","isSomeQueryLoading","some","buildImageUrlFromFileName","filename","width","length","undefined","concat","_excluded","_extends","assign","bind","target","source","prototype","hasOwnProperty","call","_objectWithoutProperties","excluded","sourceKeys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","propTypes","className","PropTypes","cssModule","tag","tagPropType","CardSubtitle","props","_props$tag","Tag","attributes","classes","mapToCssModules","classNames","React","_author$meta","_author$meta2","_author$meta3","_author$meta4","_author$meta5","_jsxs","Card","style","card","children","_jsx","CardImg","image","top","src","defaultAuthorImage","loading","alt","CardBody","CardTitle","overflow","href","rel","ShowAllButton","collapsed","onClick","PoemContent","_useState","useState","_useState2","_slicedToArray","setCollapsed","lines","line","firstFiveLines","filter","_","isShowMoreButtonVisible","useEffect","_Fragment","maxHeight","title","linecount","PoemDetails","Container","Row","Col","sm","md","AuthorCard","Link","to","links","poems","_usePoems","useParams","Number","isNaN","parseInt","Error","poemId","find","el"],"sourceRoot":""}